{"version":3,"sources":["EnterGameID.js","NameFormBasic.js","playingCards.js","base.js","LiveGame.js","CreateGame.js","GameFormBasic.js","SelectPosition.js","JoinGame.js","ReJoinGame.js","Landing.js","App.js","serviceWorker.js","index.js"],"names":["EnterGameID","props","handleGameIDChange","event","console","log","target","value","setState","gameID","handleGameSubmit","preventDefault","doesGameExist","state","onSubmit","this","id","className","type","onChange","required","React","Component","NameFormBasic","handleNameChange","name","handleNameSubmit","setPlayerName","playingCards","suit","symbol","abbr","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","shortid","require","LiveGame","shuffle","arr","i","j","temp","length","Math","floor","random","convert","unixtimestamp","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","displayCards","cards","sort","a","b","map","card","index","key","generate","data-index","data-suit","data-value","data-symbol","data-abbr","dealNewHand","timeStamp","now","newDeck","northCards","splice","southCards","eastCards","westCards","timestampLastDeal","thisHand","prevState","allHands","loggedIn","northName","localStorage","setItem","JSON","stringify","southName","eastName","westName","isEmpty","obj","undefined","cleanUp","currentGameID","syncState","context","asArray","fetch","then","data","catch","error","listenTo","northCardsDisplay","southCardsDisplay","eastCardsDisplay","westCardsDisplay","dealNewHandButton","onClick","role","aria-label","northNameToPublish","southNameToPublish","eastNameToPublish","westNameToPublish","Object","entries","onBeforeunload","CreateGame","parseInt","game","includes","isValidGameID","duplicate","playerName","update","err","setGameID","post","liveGame","nameForm","warning","GameFormBasic","handleGameChange","SelectPosition","handleOptionChange","position","handleRadioSubmit","setPlayerPosition","selectedOption","availableSeats","northRadioBtn","southRadioBtn","checked","eastRadioBtn","westRadioBtn","saveButton","href","JoinGame","filter","item","form","status","push","signInInfo","ReJoinGame","Landing","creatingNewGame","createGame","joiningAGame","joinGame","rejoiningAGame","rejoinGame","getItem","playerPosition","appView","App","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a2cfc889.chunk.js","sourcesContent":["import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass EnterGameID extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               gameID: ''\n          }\n\n     }\n\n     handleGameIDChange = (event) => {\n          console.log(event.target.value);\n          this.setState({ gameID: event.target.value });\n       }\n\n     handleGameSubmit = (event) => {\n          event.preventDefault();\n          this.props.doesGameExist(this.state.gameID);\n     }\n\n     render() {\n\n          return (\n               <>\n               <form onSubmit={this.handleGameSubmit} id=\"create-new-game-form\">\n                 <label>\n                    <span className=\"form-label-text\">Enter Game ID#:</span>\n                    <input type=\"number\" value={this.state.gameID} onChange={this.handleGameIDChange} required />\n                 </label>\n                 <input type=\"submit\" value=\"Create Game Now\" />\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default EnterGameID;\n","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass NameFormBasic extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               name: ''\n          }\n\n     }\n\n     handleNameChange = (event) => {\n          //console.log(event.target.value);\n          this.setState({ name: event.target.value });\n       }\n\n     handleNameSubmit = (event) => {\n          event.preventDefault();\n          this.props.setPlayerName(this.state.name);\n     }\n\n     render() {\n\n          return (\n               <>\n               <form onSubmit={this.handleNameSubmit} id=\"name-form-basic\">\n                 <label>\n                    <span className=\"name-enter-text\">Enter Your Name:</span>\n                    <input type=\"text\" value={this.state.name} onChange={this.handleNameChange} required />\n                 </label>\n                 <input type=\"submit\" value=\"Submit\" />\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default NameFormBasic;\n","const playingCards = [\n     {\n          name: 'Two of Clubs',\n          value: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Clubs',\n          value: 3,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Clubs',\n          value: 4,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Clubs',\n          value: 5,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Clubs',\n          value: 6,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Clubs',\n          value: 7,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Clubs',\n          value: 8,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Clubs',\n          value: 9,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Clubs',\n          value: 10,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Clubs',\n          value: 11,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Clubs',\n          value: 12,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Clubs',\n          value: 13,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Clubs',\n          value: 14,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'A',\n     },\n     {\n          name: 'Two of Diamonds',\n          value: 2,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Diamonds',\n          value: 3,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Diamonds',\n          value: 4,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Diamonds',\n          value: 5,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Diamonds',\n          value: 6,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Diamonds',\n          value: 7,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Diamonds',\n          value: 8,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Diamonds',\n          value: 9,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Diamonds',\n          value: 10,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Diamonds',\n          value: 11,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Diamonds',\n          value: 12,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Diamonds',\n          value: 13,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Diamonds',\n          value: 14,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'A',\n     },\n     {\n          name: 'Two of Hearts',\n          value: 2,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Hearts',\n          value: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Hearts',\n          value: 4,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Hearts',\n          value: 5,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Hearts',\n          value: 6,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Hearts',\n          value: 7,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Hearts',\n          value: 8,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Hearts',\n          value: 9,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Hearts',\n          value: 10,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Hearts',\n          value: 11,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Hearts',\n          value: 12,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Hearts',\n          value: 13,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Hearts',\n          value: 14,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'A',\n     },\n     {\n          name: 'Two of Spades',\n          value: 2,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Spades',\n          value: 3,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Spades',\n          value: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Spades',\n          value: 5,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Spades',\n          value: 6,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Spades',\n          value: 7,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Spades',\n          value: 8,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Spades',\n          value: 9,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Spades',\n          value: 10,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Spades',\n          value: 11,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Spades',\n          value: 12,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Spades',\n          value: 13,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Spades',\n          value: 14,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'A',\n     },\n];\n\nexport default playingCards;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n     apiKey: \"AIzaSyAmnj0WBhZQsUe-hADDZlUl22Nplioi_Ec\",\n     authDomain: \"bridge-dealer.firebaseapp.com\",\n     databaseURL: \"https://bridge-dealer.firebaseio.com\",\n     projectId: \"bridge-dealer\",\n     storageBucket: \"bridge-dealer.appspot.com\",\n     messagingSenderId: \"759781159430\",\n     appId: \"1:759781159430:web:dafb4c46b5eb0a194d4987\"\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;\n","import React from 'react';\nimport playingCards from './playingCards';\n\nimport base from './base';\nimport { Beforeunload } from 'react-beforeunload';\nconst shortid = require('shortid');\n\n\n///////////////////////////////////////////////////////////////////////\n\nclass LiveGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               northName: this.props.northName,\n               southName: this.props.southName,\n               eastName: this.props.eastName,\n               westName: this.props.westName,\n               loggedIn: this.props.loggedIn,\n               northCards: [],\n               southCards: [],\n               eastCards: [],\n               westCards: [],\n               allHands: [],\n               timestampLastDeal: 0,\n          }\n\n          console.log(playingCards);\n\n     }\n\n     // Helper Function: shuffle the deck to start with, source: https://www.jstips.co/en/javascript/shuffle-an-array/\n     shuffle = (arr) => {\n         var i,\n             j,\n             temp;\n         for (i = arr.length - 1; i > 0; i--) {\n             j = Math.floor(Math.random() * (i + 1));\n             temp = arr[i];\n             arr[i] = arr[j];\n             arr[j] = temp;\n         }\n         return arr;\n     };\n\n\n\n     convert = ( unixtimestamp ) => {\n\n     var date = new Date(unixtimestamp);\n\n      // Months array\n      var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n\n      // Year\n      var year = date.getFullYear();\n\n      // Month\n      var month = months_arr[date.getMonth()];\n\n      // Day\n      var day = date.getDate();\n\n      // Hours\n      var hours = date.getHours();\n\n      // Minutes\n      var minutes = \"0\" + date.getMinutes();\n\n      // Seconds\n      var seconds = \"0\" + date.getSeconds();\n\n      // Display date time in MM-dd-yyyy h:m:s format\n      var convdataTime = month+'-'+day+'-'+year+' '+hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n      return convdataTime;\n\n}\n\n\n     // Helper Function: create the display from an array of objects (cards)\n     displayCards = (cards) => {\n\n          // order the cards by suit then value (high to low)\n          cards.sort((a, b) => (a.suit < b.suit) ? 1 : (a.suit === b.suit) ? ((a.value < b.value) ? 1 : -1) : -1 )\n\n          const cardsToDisplay = cards.map((card, index) =>\n            <li key={shortid.generate()} className=\"card\" id={card.abbr + '-' + card.suit} data-index={index} data-suit={card.suit} data-value={card.value} data-symbol={card.symbol} data-abbr={card.abbr}>\n              <div className=\"card-abbr\">{card.abbr}</div>\n              <div className=\"card-name\">{card.name}</div>\n              <div className=\"suit-symbol\">{card.symbol}</div>\n            </li>\n          );\n          return cardsToDisplay;\n     }\n\n\n     dealNewHand = () => {\n\n          // add the previous hand into allHands for historical reference\n          // let previousHand = [];\n          // previousHand['northCards'] = this.state.northCards;\n          // previousHand['southCards'] = this.state.southCards;\n          // previousHand['eastCards'] = this.state.eastCards;\n          // previousHand['westCards'] = this.state.westCards;\n          // this.setState(prevState => ({\n          //      allHands: [...prevState.allHands, previousHand],\n          // }));\n\n          const timeStamp = Date.now();\n          const newDeck = [...playingCards];\n          //console.log(newDeck);\n\n          // Deal the cards to each player!\n          //let cardsToDeal = this.shuffle(newDeck);\n          this.shuffle(newDeck);\n\n          let northCards = newDeck.splice(0,13);\n          let southCards = newDeck.splice(0,13);\n          let eastCards = newDeck.splice(0,13);\n          let westCards = newDeck.splice(0,13);\n\n          this.setState({\n               northCards: northCards,\n               southCards: southCards,\n               eastCards: eastCards,\n               westCards: westCards,\n               timestampLastDeal: timeStamp\n          });\n\n          // now store this new hand into the historical log of hands\n          let thisHand = [];\n          thisHand['northCards'] = northCards;\n          thisHand['southCards'] = southCards;\n          thisHand['eastCards'] = eastCards;\n          thisHand['westCards'] = westCards;\n          thisHand['timestampLastDeal'] = timeStamp;\n          this.setState(prevState => ({\n               allHands: [...prevState.allHands, thisHand],\n          }));\n\n\n          // save current hand into localStorage\n          if(this.state.loggedIn === this.state.northName) { localStorage.setItem('bridgeDealer.currentHand', JSON.stringify(northCards)); }\n          if(this.state.loggedIn === this.state.southName) { localStorage.setItem('bridgeDealer.currentHand', JSON.stringify(southCards)); }\n          if(this.state.loggedIn === this.state.eastName) { localStorage.setItem('bridgeDealer.currentHand', JSON.stringify(eastCards)); }\n          if(this.state.loggedIn === this.state.westName) { localStorage.setItem('bridgeDealer.currentHand', JSON.stringify(westCards)); }\n          //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n     }\n\n\n\n     componentDidMount() {\n\n          console.log(\"componentDidMount LiveGame\");\n          const currentGameID = this.props.gameID;\n\n            base.syncState(`allGames/${currentGameID}/northCards`, {\n              context: this,\n              state: 'northCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/southCards`, {\n              context: this,\n              state: 'southCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/eastCards`, {\n              context: this,\n              state: 'eastCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/westCards`, {\n              context: this,\n              state: 'westCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/allHands`, {\n              context: this,\n              state: 'allHands',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/timestampLastDeal`, {\n              context: this,\n              state: 'timestampLastDeal',\n              asArray: false\n            });\n\n            /// Fetch all of the player names ///////////////////////////////\n            base.fetch(`allGames/${currentGameID}`, {\n             context: this,\n             asArray: false\n           }).then(data => {\n\n             //console.log(data);\n\n             this.setState({\n                  northName: data.northName,\n                  southName: data.southName,\n                  eastName: data.eastName,\n                  westName: data.westName\n             });\n\n           }).catch(error => {\n             //handle error\n        });\n\n\n        // listen to the gameID endpoint to see if new players are added - SOUTHNAME\n        base.listenTo(`allGames/${currentGameID}/southName`, {\n         context: this,\n         asArray: false,\n         then(data){\n           //console.log(\"UPDATED southName DATA ///////////////////////////////////////////\");\n           //console.log(data);\n            this.setState({ southName: data });\n         }\n       })\n\n       // listen to the gameID endpoint to see if new players are added - SOUTHNAME\n       base.listenTo(`allGames/${currentGameID}/eastName`, {\n       context: this,\n       asArray: false,\n       then(data){\n          //console.log(\"UPDATED eastName DATA ///////////////////////////////////////////\");\n          //console.log(data);\n          this.setState({ eastName: data });\n       }\n     })\n\n        // listen to the gameID endpoint to see if new players are added - WESTNAME\n        base.listenTo(`allGames/${currentGameID}/westName`, {\n         context: this,\n         asArray: false,\n         then(data){\n           //console.log(\"UPDATED westName DATA ///////////////////////////////////////////\");\n           //console.log(data);\n            this.setState({ westName: data });\n         }\n       })\n\n\n       //////////////////////////////////////////////////////////////////////////////////////////////////////////\n       // Each player records their info into localStorage in case of disconnection\n       localStorage.setItem('bridgeDealer.loggedIn', this.props.loggedIn);\n       localStorage.setItem('bridgeDealer.gameID', this.props.gameID);\n\n       // get player position\n       if(this.state.loggedIn === this.state.northName) { localStorage.setItem('bridgeDealer.position', 'north'); }\n       if(this.state.loggedIn === this.state.southName) { localStorage.setItem('bridgeDealer.position', 'south'); }\n       if(this.state.loggedIn === this.state.eastName) { localStorage.setItem('bridgeDealer.position', 'east'); }\n       if(this.state.loggedIn === this.state.westName) { localStorage.setItem('bridgeDealer.position', 'west'); }\n       //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n     }\n\n\n\n\n     isEmpty = (obj) => {\n          if( obj !== undefined ) {\n               // return Object.keys(obj).length === 0;\n               return JSON.stringify(obj) === '{}';\n          } else {\n               return false;\n          }\n     }\n\n\n\n     cleanUp = (event) => {\n          event.preventDefault();\n          console.log(\"Clean UPPPPPPPPP\");\n     }\n\n\n\n\n     componentWillUnmount() {\n\n          console.log(\"Component Will Unmount ------------------------------\");\n\n     }\n\n\n\n     render() {\n\n          // see which player is logged in and show only their cards\n          let northCardsDisplay = null;\n          let southCardsDisplay = null;\n          let eastCardsDisplay = null;\n          let westCardsDisplay = null;\n\n          let dealNewHandButton = null;\n\n          if( this.props.loggedIn === this.state.northName || this.state.loggedIn === 'clb' ) {\n               northCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>North - {this.state.northName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.northCards)}</div>\n                    </div>\n               );\n\n               if( this.state.northName && this.state.southName && this.state.eastName && this.state.westName ) {\n                    dealNewHandButton = (<div className=\"deal-new-hand-action-area\"><button onClick={this.dealNewHand}>Deal New Hand <span role=\"img\" aria-label=\"thumbs up\">👍</span></button></div>);\n               }\n          }\n\n          if( this.state.loggedIn === this.state.southName || this.state.loggedIn === 'clb' ) {\n               southCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>South - {this.state.southName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.southCards)}</div>\n                    </div>\n               );\n          }\n\n          if( this.state.loggedIn === this.state.eastName || this.state.loggedIn === 'clb' ) {\n               eastCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>East - {this.state.eastName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.eastCards)}</div>\n                    </div>\n               );\n          }\n\n          if( this.state.loggedIn === this.state.westName || this.state.loggedIn === 'clb' ) {\n               westCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>West - {this.state.westName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.westCards)}</div>\n                    </div>\n               );\n          }\n\n          let northNameToPublish = this.state.northName || (<span className=\"waiting-on-player\">Waiting...</span>);\n          let southNameToPublish = this.state.southName || (<span className=\"waiting-on-player\">Waiting...</span>);\n          let eastNameToPublish = this.state.eastName || (<span className=\"waiting-on-player\">Waiting...</span>);\n          let westNameToPublish = this.state.westName || (<span className=\"waiting-on-player\">Waiting...</span>);\n\n          if( this.state.southName === {} ) { southNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>); }\n          if( this.state.eastName === {} ) { eastNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>); }\n          if( this.state.westName === {} ) { westNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>); }\n\n          if( this.state.southName !== undefined && this.state.southName !== null ) {\n               let eastCheck = Object.entries(this.state.southName).length === 0;\n               //console.log(eastCheck);\n               if( eastCheck ) {\n                    southNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>);\n               }\n          }\n\n          if( this.state.eastName !== undefined && this.state.eastName !== null ) {\n               let eastCheck = Object.entries(this.state.eastName).length === 0;\n               //console.log(eastCheck);\n               if( eastCheck ) {\n                    eastNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>);\n               }\n          }\n\n          if( this.state.westName !== undefined && this.state.westName !== null ) {\n               let eastCheck = Object.entries(this.state.westName).length === 0;\n               //console.log(eastCheck);\n               if( eastCheck ) {\n                    westNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>);\n               }\n          }\n\n\n          return (\n               <>\n               <h2 className=\"lets-play-headline\">Let's Play!</h2>\n               {dealNewHandButton}\n               <div className=\"players-listing-area\">\n                    <div className=\"single-player\">North: {northNameToPublish}</div>\n                    <div className=\"single-player\">South: {southNameToPublish}</div>\n                    <div className=\"single-player\">East: {eastNameToPublish}</div>\n                    <div className=\"single-player\">West: {westNameToPublish}</div>\n               </div>\n               <div className=\"hand-area\">\n                    {northCardsDisplay}\n                    {southCardsDisplay}\n                    {eastCardsDisplay}\n                    {westCardsDisplay}\n                    { this.state.timestampLastDeal > 0 &&\n                         <div className=\"last-dealt game-footer-info\">Last Dealt: {this.convert(this.state.timestampLastDeal)}</div>\n                    }\n               </div>\n               <div className=\"game-footer-info\">Game ID#: {this.props.gameID}</div>\n               <Beforeunload onBeforeunload={this.cleanUp} />\n               </>\n               );\n     }\n\n}\n\n\nexport default LiveGame;\n","import React from 'react';\nimport EnterGameID from './EnterGameID';\nimport NameFormBasic from './NameFormBasic';\nimport LiveGame from './LiveGame';\nimport base from './base';\n\n///////////////////////////////////////////////////////////////////////\n\nclass CreateGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               playerName: '',\n               gameID: '',\n               isValidGameID: false,\n               duplicate: false,\n          }\n\n     }\n\n\n\n     doesGameExist = (id) => {\n\n          const gameID = parseInt(id);\n          console.log(parseInt(gameID));\n\n          let allGamesByID = null;\n            base.fetch('allGames', {\n              context: this,\n              asArray: true\n            }).then(data => {\n\n              console.log(data);\n              // use mapping to get an array of all the GameIDs, then check that the new game is a unique number\n              allGamesByID = data.map(function(game) { return parseInt(game.gameID); });\n              if( allGamesByID.includes(gameID) ) {\n                   this.setState({ isValidGameID: false, duplicate: true });\n                   console.log(\"ALREADY TAKEN\");\n              } else {\n                   // if new game number is unique, set isValidGameID to true and enter Name\n                   console.log(\"WORKED\");\n                   this.setState({ isValidGameID: true, gameID: gameID, duplicate: false });\n              }\n\n            }).catch(error => {\n              //handle error\n         });\n\n     }\n\n\n\n     setPlayerName = (name) => {\n         console.log(name);\n         this.setState({ playerName: name });\n\n\n         base.update(`allGames/${this.state.gameID}`, {\n              data: { northName: name }\n            }).then(() => {\n              console.log(\"Added New Player\");\n            }).catch(err => {\n              // handle error\n            });\n\n     }\n\n\n     setGameID = (gameID) => {\n\n          base.post(`allGames/${gameID}`, {\n              data: { gameID: gameID }\n            }).then(() => {\n              console.log(\"Created New Game via base.post\");\n            }).catch(err => {\n              // handle error\n            });\n\n     }\n\n\n     render() {\n\n          //console.log(this.state.duplicate);\n\n          let liveGame = null\n          if( this.state.playerName && this.state.gameID ) {\n               liveGame = ( <LiveGame\n                                   loggedIn={this.state.playerName}\n                                   northName={this.state.playerName}\n                                   gameID={this.state.gameID}\n                              />);\n          }\n\n          let nameForm = null;\n          if( this.state.isValidGameID && !this.state.playerName ) {\n               nameForm = (\n                              <>\n                              <h2>Create a New Game</h2>\n                              <NameFormBasic\n                                   setPlayerName={this.setPlayerName}\n                              />\n                              </>\n                         );\n               this.setGameID(this.state.gameID);\n          } else if ( this.state.isValidGameID && this.state.playerName ) {\n               nameForm = null;\n          }\n\n\n          let warning = null;\n          if( this.state.duplicate === true ) {\n               warning = (<div className=\"warning\">Sorry, that game was already created. Try again?</div>);\n          }\n\n\n          return (\n               <>\n               { this.state.isValidGameID === false &&\n                    <>\n                    <h2>Create a New Game</h2>\n                    {warning}\n                    <EnterGameID\n                         doesGameExist={this.doesGameExist}\n                    />\n                    </>\n               }\n               { nameForm }\n               { liveGame }\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default CreateGame;\n","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass GameFormBasic extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               gameID: ''\n          }\n\n     }\n\n     handleGameChange = (event) => {\n          console.log(event.target.value);\n          this.setState({ gameID: event.target.value });\n       }\n\n     handleGameSubmit = (event) => {\n          event.preventDefault();\n          this.props.handleGameSubmit(this.state.gameID);\n     }\n\n     render() {\n\n          return (\n               <>\n               <form onSubmit={this.handleGameSubmit} id=\"join-a-game-form\">\n                 <label>\n                    <span className=\"form-label-text\">Enter the Game ID#:</span>\n                    <input type=\"number\" value={this.state.gameID} onChange={this.handleGameChange} required />\n                 </label>\n                 <input type=\"submit\" value=\"Submit\" />\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default GameFormBasic;\n","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass SelectPosition extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               position: '',\n               selectedOption: '',\n          }\n\n     }\n\n     handleOptionChange = (event) => {\n          console.log(event.target.value);\n         this.setState({\n           position: event.target.value\n         });\n       }\n\n       handleRadioSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"You have submitted: \" + this.state.position);\n        this.props.setPlayerPosition(this.state.position);\n       };\n\n     render() {\n\n          const availableSeats = this.props.availableSeats;\n\n          const northRadioBtn = (<div className=\"form-check\">\n            <div className=\"disabled\">North: {this.props.northName}</div>\n          </div>);\n\n          let southRadioBtn = null;\n          if( availableSeats.includes('South')) {\n               southRadioBtn = (<div className=\"form-check\">\n                 <label>\n                   <input\n                    type=\"radio\"\n                    name=\"react-tips\"\n                    value=\"South\"\n                    checked={this.state.position === \"South\"}\n                    onChange={this.handleOptionChange}\n                    className=\"form-check-input form-radio\"\n                   />\n                   South\n                 </label>\n               </div>);\n          } else if( this.props.southName ) {\n               southRadioBtn = (<div className=\"form-check\">\n                 <div className=\"disabled\">South: {this.props.southName}</div>\n               </div>);\n          }\n\n          let eastRadioBtn = null;\n          if( availableSeats.includes('East')) {\n               eastRadioBtn = (<div className=\"form-check\">\n                 <label>\n                   <input\n                    type=\"radio\"\n                    name=\"react-tips\"\n                    value=\"East\"\n                    checked={this.state.position === \"East\"}\n                    onChange={this.handleOptionChange}\n                    className=\"form-check-input form-radio\"\n                   />\n                   East\n                 </label>\n               </div>);\n          } else if( this.props.eastName ) {\n               eastRadioBtn = (<div className=\"form-check\">\n                 <div className=\"disabled\">East: {this.props.eastName}</div>\n               </div>);\n          }\n\n          let westRadioBtn = null;\n          if( availableSeats.includes('West')) {\n               westRadioBtn = (<div className=\"form-check\">\n                 <label>\n                   <input\n                    type=\"radio\"\n                    name=\"react-tips\"\n                    value=\"West\"\n                    checked={this.state.position === \"West\"}\n                    onChange={this.handleOptionChange}\n                    className=\"form-check-input form-radio\"\n                   />\n                   West\n                 </label>\n               </div>);\n          } else if( this.props.westName ) {\n               westRadioBtn = (<div className=\"form-check\">\n                 <div className=\"disabled\">West: {this.props.westName}</div>\n               </div>);\n          }\n\n\n          let saveButton = (\n               <button className=\"btn btn-primary mt-2\" type=\"submit\">\n                 Save\n               </button>);\n          console.log(availableSeats);\n          if( availableSeats.length < 1 ) {\n               saveButton = (\n                    <button className=\"btn btn-primary mt-2\" type=\"submit\"><a href=\"/bridge-dealer\">\n                      Sorry, this game is full. Start over?\n                    </a></button>);\n          }\n\n          return (\n               <>\n               <h3>Select a Seat at the Table: {this.state.position}</h3>\n               <form onSubmit={this.handleRadioSubmit} id=\"select-position-form\">\n\n                 {northRadioBtn}\n                 {southRadioBtn}\n                 {eastRadioBtn}\n                 {westRadioBtn}\n\n                 <div className=\"form-group\">\n                   {saveButton}\n                 </div>\n\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default SelectPosition;\n","import React from 'react';\nimport GameFormBasic from './GameFormBasic';\nimport NameFormBasic from './NameFormBasic';\nimport SelectPosition from './SelectPosition';\nimport LiveGame from './LiveGame';\nimport base from './base';\n\n///////////////////////////////////////////////////////////////////////\n\nclass JoinGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               gameID: '',\n               availableSeats: [],\n               position: '',\n               playerName: '',\n               warning: false,\n               northName: '',\n               southName: '',\n               eastName: '',\n               westName: ''\n          }\n\n     }\n\n\n     handleGameSubmit = (id) => {\n          console.log(id);\n          const gameID = parseInt(id);\n\n          let allGamesByID = null;\n            base.fetch('allGames', {\n              context: this,\n              asArray: true\n            }).then(data => {\n\n              console.log(data);\n              // use mapping to get an array of all the GameIDs, then check that the new game is a unique number\n              allGamesByID = data.map(function(game) { return parseInt(game.gameID); });\n              if( allGamesByID.includes(gameID) ) {\n\n                   console.log(\"GOOD TO GO!\");\n                   this.setState({ gameID, warning: false });\n                   this.availableSeats(gameID);\n\n              } else {\n\n                   console.log(\"THAT GAME DOES NOT EXIST\");\n                   this.setState({ warning: true, gameID: '' });\n              }\n\n            }).catch(error => {\n              //handle error\n         });\n\n     }\n\n\n     setPlayerPosition = (position) => {\n          console.log(position);\n         this.setState({ position: position });\n    }\n\n\n     setPlayerName = (name) => {\n         console.log(name);\n         this.setState({ playerName: name });\n\n         if( this.state.position === 'South' ) {\n              base.update(`allGames/${this.state.gameID}`, {\n                   data: { southName: name }\n                 }).then(() => {\n                   console.log(\"Added New Player\");\n                 }).catch(err => {\n                   // handle error\n                 });\n            }\n\n       if( this.state.position === 'East' ) {\n           base.update(`allGames/${this.state.gameID}`, {\n                data: { eastName: name }\n               }).then(() => {\n                console.log(\"Added New Player\");\n               }).catch(err => {\n                // handle error\n               });\n         }\n\n         if( this.state.position === 'West' ) {\n             base.update(`allGames/${this.state.gameID}`, {\n                  data: { westName: name }\n                 }).then(() => {\n                  console.log(\"Added New Player\");\n                 }).catch(err => {\n                  // handle error\n                 });\n           }\n\n     }\n\n\n\n     availableSeats = (gameID) => {\n\n          let availableSeats = ['South', 'East', 'West'];\n\n          base.fetch(`allGames/${gameID}`, {\n            context: this,\n            asArray: false\n          }).then(data => {\n\n            console.log(data);\n\n            if( data.northName !== undefined ) {\n                 console.log(\"NORTHNAME: \" + data.northName);\n                 this.setState({ northName: data.northName });\n            }\n\n            if( data.southName !== undefined ) {\n               console.log(\"SOUTHNAME: \" + data.southName);\n               availableSeats = availableSeats.filter(item => item !== 'South');\n               console.log(availableSeats);\n               this.setState({ southName: data.southName });\n            }\n\n            if( data.eastName !== undefined ) {\n               console.log(\"EASTNAME: \" + data.eastName);\n               availableSeats = availableSeats.filter(item => item !== 'East');\n               console.log(availableSeats);\n               this.setState({ eastName: data.eastName });\n            }\n\n            if( data.westName !== undefined ) {\n               console.log(\"WESTNAME: \" + data.westName);\n               availableSeats = availableSeats.filter(item => item !== 'West');\n               console.log(availableSeats);\n               this.setState({ westName: data.westName });\n            }\n\n            this.setState({ availableSeats: availableSeats });\n\n          }).catch(error => {\n            //handle error\n       });\n\n     }\n\n\n\n\n\n     render() {\n\n          console.log(this.state.northName);\n\n          let form = null;\n          if( this.state.gameID === '' ) {\n               form = (\n                    <GameFormBasic\n                         handleGameSubmit={this.handleGameSubmit}\n                    />\n               );\n          } else if ( this.state.gameID !== '' && this.state.position === '' && this.state.playerName === ''  ) {\n               form = (\n                    <SelectPosition\n                         gameID={this.state.gameID}\n                         setPlayerPosition={this.setPlayerPosition}\n                         availableSeats={this.state.availableSeats}\n                         northName={this.state.northName}\n                         southName={this.state.southName}\n                         eastName={this.state.eastName}\n                         westName={this.state.westName}\n                    />\n               );\n          } else if ( this.state.gameID !== '' && this.state.position !== '' && this.state.playerName === ''  ) {\n               form = (\n                    <NameFormBasic\n                         setPlayerName={this.setPlayerName}\n                         gameID={this.state.gameID}\n                    />\n               );\n          }\n\n\n          let warning = null;\n          if( this.state.warning === true ) {\n               warning = (<div className=\"warning\">Sorry, that game does not exist. Try again?</div>);\n          }\n\n          let status = [];\n          if( this.state.gameID !== '' ) {\n               status.push(<div className=\"status game-id\" key=\"status-game-id\">Game ID#: {this.state.gameID}</div>);\n          }\n          if( this.state.position !== '' ) {\n               status.push(<div className=\"status position\" key=\"status-position\">Seat: {this.state.position}</div>);\n          }\n\n\n\n          let signInInfo = (\n               <>\n               <h2>Join a Game</h2>\n               {warning}\n               <div className=\"status-area\">{status}</div>\n               {form}\n               </>\n          );\n\n\n          let liveGame = null;\n          if( this.state.playerName && this.state.gameID ) {\n\n               if( this.state.position === 'South' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.state.playerName}\n                                        southName={this.state.playerName}\n                                        gameID={this.state.gameID}\n                                   />);\n               }\n\n               if( this.state.position === 'East' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.state.playerName}\n                                        eastName={this.state.playerName}\n                                        gameID={this.state.gameID}\n                                   />);\n               }\n\n               if( this.state.position === 'West' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.state.playerName}\n                                        westName={this.state.playerName}\n                                        gameID={this.state.gameID}\n                                   />);\n               }\n\n\n               signInInfo = null;\n          }\n\n\n\n\n          return (\n               <>\n               {signInInfo}\n               {liveGame}\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default JoinGame;\n","import React from 'react';\nimport LiveGame from './LiveGame';\n\n///////////////////////////////////////////////////////////////////////\n\nclass ReJoinGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n\n          }\n\n     }\n\n\n\n     render() {\n\n          let liveGame = null;\n          console.log(this.props.position);\n\n          if( this.props.playerName && this.props.gameID ) {\n\n               if( this.props.position === 'north' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.props.playerName}\n                                        northName={this.props.playerName}\n                                        gameID={this.props.gameID}\n                                   />);\n               }\n\n               if( this.props.position === 'south' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.props.playerName}\n                                        southName={this.props.playerName}\n                                        gameID={this.props.gameID}\n                                   />);\n               }\n\n               if( this.props.position === 'east' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.props.playerName}\n                                        eastName={this.props.playerName}\n                                        gameID={this.props.gameID}\n                                   />);\n               }\n\n               if( this.props.position === 'west' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.props.playerName}\n                                        westName={this.props.playerName}\n                                        gameID={this.props.gameID}\n                                   />);\n               }\n\n          }\n\n\n\n\n          return (\n               <>\n               {liveGame}\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default ReJoinGame;\n","import React from 'react';\nimport CreateGame from './CreateGame';\nimport JoinGame from './JoinGame';\nimport ReJoinGame from './ReJoinGame';\n\n///////////////////////////////////////////////////////////////////////\n\nclass Landing extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               currentGameID: null,\n               createGame: false,\n               joinGame: false,\n               rejoinGame: false,\n          }\n\n     }\n\n     creatingNewGame = (event) => {\n          event.preventDefault();\n          this.setState({\n             createGame: true\n          });\n     }\n\n\n     joiningAGame = (event) => {\n          event.preventDefault();\n          this.setState({\n             joinGame: true\n          });\n     }\n\n\n     rejoiningAGame = (event) => {\n          event.preventDefault();\n          this.setState({\n             rejoinGame: true\n          });\n     }\n\n\n     render() {\n\n          const gameID = localStorage.getItem('bridgeDealer.gameID');\n          const playerName = localStorage.getItem('bridgeDealer.loggedIn');\n          const playerPosition = localStorage.getItem('bridgeDealer.position');\n          console.log(\"CURRENT GAMEID: \" + gameID);\n\n          // decide what to show visitors in the app\n          let appView = (\n               <>\n               {gameID &&\n               <div className=\"action-button-area rejoin-area\">\n                    <button id=\"rejoin-active-game\" onClick={this.rejoiningAGame}>\n                         <span className=\"rejoin-main-text\">Re-Join Current Game</span>\n                         <span className=\"rejoin-details\">ID#: {gameID}</span>\n                         <span className=\"rejoin-details\">Name: {playerName}</span>\n                         <span className=\"rejoin-details\">Position: {playerPosition}</span>\n                    </button>\n               </div>\n               }\n\n               <div className=\"action-button-area\">\n                    <button onClick={this.joiningAGame}>Join Game</button>\n                    <button onClick={this.creatingNewGame}>Create New Game</button>\n               </div>\n               </>);\n\n          if( this.state.createGame === true ) {\n               appView = (\n                    <CreateGame />\n               );\n          }\n\n          if( this.state.joinGame === true ) {\n               appView = (\n                    <JoinGame />\n               );\n          }\n\n          if( this.state.rejoinGame === true ) {\n               appView = (\n                    <ReJoinGame\n                         gameID={gameID}\n                         playerName={playerName}\n                         position={playerPosition}\n                    />\n               );\n          }\n\n          return(\n               <div className=\"single-page-area\">\n                    {appView}\n               </div>\n          );\n\n     }\n\n}\n\n\nexport default Landing;\n","import React from 'react';\nimport Landing from './Landing';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"><h1><a href=\"/bridge-dealer\">Bridge Dealer</a></h1></header>\n      <div className=\"clb-grail-body\">\n          <Landing />\n      </div>\n      <footer className=\"clb-bridge-dealer-footer\">\n              Bridge Dealer &middot; <a href=\"https://github.com/tomatillodesign/bridge-dealer\" target=\"_blank\" rel=\"noopener noreferrer\">Version 1.0</a> &middot; By Chris Liu-Beers, <a href=\"http://tomatillodesign.com\" target=\"_blank\" rel=\"noopener noreferrer\">Tomatillo Design</a>\n            </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}