{"version":3,"sources":["logo.svg","EnterGameID.js","NameFormBasic.js","playingCards.js","base.js","LiveGame.js","CreateGame.js","GameFormBasic.js","SelectPosition.js","JoinGame.js","Landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EnterGameID","props","handleGameIDChange","event","console","log","target","value","setState","gameID","handleGameSubmit","preventDefault","doesGameExist","state","onSubmit","this","id","className","type","onChange","required","React","Component","NameFormBasic","handleNameChange","name","handleNameSubmit","setPlayerName","playingCards","suit","symbol","abbr","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","shortid","require","LiveGame","shuffle","arr","i","j","temp","length","Math","floor","random","convert","unixtimestamp","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","displayCards","cards","sort","a","b","map","card","index","key","generate","data-index","data-suit","data-value","data-symbol","data-abbr","dealNewHand","previousHand","northCards","southCards","eastCards","westCards","prevState","allHands","newDeck","splice","timestampLastDeal","now","isEmpty","obj","undefined","JSON","stringify","northName","southName","eastName","westName","loggedIn","currentGameID","syncState","context","asArray","fetch","then","data","catch","error","listenTo","northCardsDisplay","southCardsDisplay","eastCardsDisplay","westCardsDisplay","dealNewHandButton","onClick","northNameToPublish","southNameToPublish","eastNameToPublish","westNameToPublish","Object","entries","onBeforeunload","CreateGame","parseInt","game","includes","isValidGameID","duplicate","playerName","update","err","setGameID","post","liveGame","nameForm","warning","GameFormBasic","handleGameChange","SelectPosition","handleOptionChange","position","handleRadioSubmit","setPlayerPosition","selectedOption","availableSeats","northRadioBtn","southRadioBtn","checked","eastRadioBtn","westRadioBtn","saveButton","href","JoinGame","filter","item","form","status","push","signInInfo","Landing","creatingNewGame","createGame","joiningAGame","joinGame","appView","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5c7a233a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass EnterGameID extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               gameID: ''\n          }\n\n     }\n\n     handleGameIDChange = (event) => {\n          console.log(event.target.value);\n          this.setState({ gameID: event.target.value });\n       }\n\n     handleGameSubmit = (event) => {\n          event.preventDefault();\n          this.props.doesGameExist(this.state.gameID);\n     }\n\n     render() {\n\n          return (\n               <>\n               <form onSubmit={this.handleGameSubmit} id=\"create-new-game-form\">\n                 <label>\n                    <span className=\"form-label-text\">Enter Game ID#:</span>\n                    <input type=\"number\" value={this.state.gameID} onChange={this.handleGameIDChange} required />\n                 </label>\n                 <input type=\"submit\" value=\"Create Game Now\" />\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default EnterGameID;\n","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass NameFormBasic extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               name: ''\n          }\n\n     }\n\n     handleNameChange = (event) => {\n          console.log(event.target.value);\n          this.setState({ name: event.target.value });\n       }\n\n     handleNameSubmit = (event) => {\n          event.preventDefault();\n          this.props.setPlayerName(this.state.name);\n     }\n\n     render() {\n\n          return (\n               <>\n               <form onSubmit={this.handleNameSubmit} id=\"name-form-basic\">\n                 <label>\n                    <span className=\"name-enter-text\">Enter Your Name:</span>\n                    <input type=\"text\" value={this.state.name} onChange={this.handleNameChange} required />\n                 </label>\n                 <input type=\"submit\" value=\"Submit\" />\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default NameFormBasic;\n","const playingCards = [\n     {\n          name: 'Two of Clubs',\n          value: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Clubs',\n          value: 3,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Clubs',\n          value: 4,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Clubs',\n          value: 5,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Clubs',\n          value: 6,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Clubs',\n          value: 7,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Clubs',\n          value: 8,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Clubs',\n          value: 9,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Clubs',\n          value: 10,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Clubs',\n          value: 11,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Clubs',\n          value: 12,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Clubs',\n          value: 13,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Clubs',\n          value: 14,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'A',\n     },\n     {\n          name: 'Two of Diamonds',\n          value: 2,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Diamonds',\n          value: 3,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Diamonds',\n          value: 4,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Diamonds',\n          value: 5,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Diamonds',\n          value: 6,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Diamonds',\n          value: 7,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Diamonds',\n          value: 8,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Diamonds',\n          value: 9,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Diamonds',\n          value: 10,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Diamonds',\n          value: 11,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Diamonds',\n          value: 12,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Diamonds',\n          value: 13,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Diamonds',\n          value: 14,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'A',\n     },\n     {\n          name: 'Two of Hearts',\n          value: 2,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Hearts',\n          value: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Hearts',\n          value: 4,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Hearts',\n          value: 5,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Hearts',\n          value: 6,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Hearts',\n          value: 7,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Hearts',\n          value: 8,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Hearts',\n          value: 9,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Hearts',\n          value: 10,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Hearts',\n          value: 11,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Hearts',\n          value: 12,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Hearts',\n          value: 13,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Hearts',\n          value: 14,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'A',\n     },\n     {\n          name: 'Two of Spades',\n          value: 2,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Spades',\n          value: 3,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Spades',\n          value: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Spades',\n          value: 5,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Spades',\n          value: 6,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Spades',\n          value: 7,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Spades',\n          value: 8,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Spades',\n          value: 9,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Spades',\n          value: 10,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Spades',\n          value: 11,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Spades',\n          value: 12,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Spades',\n          value: 13,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Spades',\n          value: 14,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'A',\n     },\n];\n\nexport default playingCards;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n     apiKey: \"AIzaSyAmnj0WBhZQsUe-hADDZlUl22Nplioi_Ec\",\n     authDomain: \"bridge-dealer.firebaseapp.com\",\n     databaseURL: \"https://bridge-dealer.firebaseio.com\",\n     projectId: \"bridge-dealer\",\n     storageBucket: \"bridge-dealer.appspot.com\",\n     messagingSenderId: \"759781159430\",\n     appId: \"1:759781159430:web:dafb4c46b5eb0a194d4987\"\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;\n","import React from 'react';\nimport playingCards from './playingCards';\n\nimport base from './base';\nimport { firebaseApp } from './base';\nimport { Beforeunload } from 'react-beforeunload';\nconst shortid = require('shortid');\n\n\n///////////////////////////////////////////////////////////////////////\n\nclass LiveGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               northName: this.props.northName,\n               southName: this.props.southName,\n               eastName: this.props.eastName,\n               westName: this.props.westName,\n               loggedIn: this.props.loggedIn,\n               northCards: [],\n               southCards: [],\n               eastCards: [],\n               westCards: [],\n               allHands: [],\n               timestampLastDeal: 0\n          }\n\n          console.log(playingCards);\n\n     }\n\n     // Helper Function: shuffle the deck to start with, source: https://www.jstips.co/en/javascript/shuffle-an-array/\n     shuffle = (arr) => {\n         var i,\n             j,\n             temp;\n         for (i = arr.length - 1; i > 0; i--) {\n             j = Math.floor(Math.random() * (i + 1));\n             temp = arr[i];\n             arr[i] = arr[j];\n             arr[j] = temp;\n         }\n         return arr;\n     };\n\n\n\n     convert = ( unixtimestamp ) => {\n\n     var date = new Date(unixtimestamp);\n\n      // Months array\n      var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n\n      // Year\n      var year = date.getFullYear();\n\n      // Month\n      var month = months_arr[date.getMonth()];\n\n      // Day\n      var day = date.getDate();\n\n      // Hours\n      var hours = date.getHours();\n\n      // Minutes\n      var minutes = \"0\" + date.getMinutes();\n\n      // Seconds\n      var seconds = \"0\" + date.getSeconds();\n\n      // Display date time in MM-dd-yyyy h:m:s format\n      var convdataTime = month+'-'+day+'-'+year+' '+hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n      return convdataTime;\n\n}\n\n\n     // Helper Function: create the display from an array of objects (cards)\n     displayCards = (cards) => {\n\n          // order the cards by suit then value (high to low)\n          cards.sort((a, b) => (a.suit < b.suit) ? 1 : (a.suit === b.suit) ? ((a.value < b.value) ? 1 : -1) : -1 )\n\n          const cardsToDisplay = cards.map((card, index) =>\n            <li key={shortid.generate()} className=\"card\" id={card.abbr + '-' + card.suit} data-index={index} data-suit={card.suit} data-value={card.value} data-symbol={card.symbol} data-abbr={card.abbr}>\n              <div className=\"card-abbr\">{card.abbr}</div>\n              <div className=\"card-name\">{card.name}</div>\n              <div className=\"suit-symbol\">{card.symbol}</div>\n            </li>\n          );\n          return cardsToDisplay;\n     }\n\n\n     dealNewHand = () => {\n\n          // add the previous hand into allHands for historical reference\n          let previousHand = [];\n          previousHand['northCards'] = this.state.northCards;\n          previousHand['southCards'] = this.state.southCards;\n          previousHand['eastCards'] = this.state.eastCards;\n          previousHand['westCards'] = this.state.westCards;\n          this.setState(prevState => ({\n               allHands: [...prevState.allHands, previousHand],\n          }));\n\n          const newDeck = [...playingCards];\n          //console.log(newDeck);\n\n          // Deal the cards to each player!\n          let cardsToDeal = this.shuffle(newDeck);\n\n          let northCards = newDeck.splice(0,13);\n          let southCards = newDeck.splice(0,13);\n          let eastCards = newDeck.splice(0,13);\n          let westCards = newDeck.splice(0,13);\n\n          this.setState({\n               northCards: northCards,\n               southCards: southCards,\n               eastCards: eastCards,\n               westCards: westCards,\n               timestampLastDeal: Date.now()\n          });\n     }\n\n\n\n     componentDidMount() {\n\n          console.log(\"componentDidMount LiveGame\");\n          const currentGameID = this.props.gameID;\n\n            base.syncState(`allGames/${currentGameID}/northCards`, {\n              context: this,\n              state: 'northCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/southCards`, {\n              context: this,\n              state: 'southCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/eastCards`, {\n              context: this,\n              state: 'eastCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/westCards`, {\n              context: this,\n              state: 'westCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/allHands`, {\n              context: this,\n              state: 'allHands',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/timestampLastDeal`, {\n              context: this,\n              state: 'timestampLastDeal',\n              asArray: false\n            });\n\n            /// Fetch all of the player names ///////////////////////////////\n            base.fetch(`allGames/${currentGameID}`, {\n             context: this,\n             asArray: false\n           }).then(data => {\n\n             //console.log(data);\n\n             this.setState({\n                  northName: data.northName,\n                  southName: data.southName,\n                  eastName: data.eastName,\n                  westName: data.westName\n             });\n\n           }).catch(error => {\n             //handle error\n        });\n\n\n        // listen to the gameID endpoint to see if new players are added - SOUTHNAME\n        base.listenTo(`allGames/${currentGameID}/southName`, {\n         context: this,\n         asArray: false,\n         then(data){\n           //console.log(\"UPDATED southName DATA ///////////////////////////////////////////\");\n           //console.log(data);\n            this.setState({ southName: data });\n         }\n       })\n\n       // listen to the gameID endpoint to see if new players are added - SOUTHNAME\n       base.listenTo(`allGames/${currentGameID}/eastName`, {\n       context: this,\n       asArray: false,\n       then(data){\n          //console.log(\"UPDATED eastName DATA ///////////////////////////////////////////\");\n          //console.log(data);\n          this.setState({ eastName: data });\n       }\n     })\n\n        // listen to the gameID endpoint to see if new players are added - WESTNAME\n        base.listenTo(`allGames/${currentGameID}/westName`, {\n         context: this,\n         asArray: false,\n         then(data){\n           //console.log(\"UPDATED westName DATA ///////////////////////////////////////////\");\n           //console.log(data);\n            this.setState({ westName: data });\n         }\n       })\n\n\n     }\n\n\n     isEmpty = (obj) => {\n          if( obj !== undefined ) {\n               // return Object.keys(obj).length === 0;\n               return JSON.stringify(obj) === '{}';\n          } else {\n               return false;\n          }\n     }\n\n\n     render() {\n\n\n          // see which player is logged in and show only their cards\n          let northCardsDisplay = null;\n          let southCardsDisplay = null;\n          let eastCardsDisplay = null;\n          let westCardsDisplay = null;\n\n          let dealNewHandButton = null;\n\n          if( this.props.loggedIn === this.state.northName || this.state.loggedIn === 'clb' ) {\n               northCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>North - {this.state.northName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.northCards)}</div>\n                    </div>\n               );\n\n               if( this.state.northName && this.state.southName && this.state.eastName && this.state.westName ) {\n                    dealNewHandButton = (<div className=\"deal-new-hand-action-area\"><button onClick={this.dealNewHand}>Deal New Hand 👍</button></div>);\n               }\n          }\n\n          if( this.state.loggedIn === this.state.southName || this.state.loggedIn === 'clb' ) {\n               southCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>South - {this.state.southName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.southCards)}</div>\n                    </div>\n               );\n          }\n\n          if( this.state.loggedIn === this.state.eastName || this.state.loggedIn === 'clb' ) {\n               eastCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>East - {this.state.eastName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.eastCards)}</div>\n                    </div>\n               );\n          }\n\n          if( this.state.loggedIn === this.state.westName || this.state.loggedIn === 'clb' ) {\n               westCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>West - {this.state.westName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.westCards)}</div>\n                    </div>\n               );\n          }\n\n          let northNameToPublish = this.state.northName || (<span className=\"waiting-on-player\">Waiting...</span>);\n          let southNameToPublish = this.state.southName || (<span className=\"waiting-on-player\">Waiting...</span>);\n          let eastNameToPublish = this.state.eastName || (<span className=\"waiting-on-player\">Waiting...</span>);\n          let westNameToPublish = this.state.westName || (<span className=\"waiting-on-player\">Waiting...</span>);\n\n          if( this.state.southName === {} ) { southNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>); }\n          if( this.state.eastName === {} ) { eastNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>); }\n          if( this.state.westName === {} ) { westNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>); }\n\n          if( this.state.southName !== undefined && this.state.southName !== null ) {\n               let eastCheck = Object.entries(this.state.southName).length === 0;\n               //console.log(eastCheck);\n               if( eastCheck ) {\n                    southNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>);\n               }\n          }\n\n          if( this.state.eastName !== undefined && this.state.eastName !== null ) {\n               let eastCheck = Object.entries(this.state.eastName).length === 0;\n               //console.log(eastCheck);\n               if( eastCheck ) {\n                    eastNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>);\n               }\n          }\n\n          if( this.state.westName !== undefined && this.state.westName !== null ) {\n               let eastCheck = Object.entries(this.state.westName).length === 0;\n               //console.log(eastCheck);\n               if( eastCheck ) {\n                    westNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>);\n               }\n          }\n\n\n          return (\n               <>\n               <h2 className=\"lets-play-headline\">Let's Play!</h2>\n               {dealNewHandButton}\n               <div className=\"players-listing-area\">\n                    <div className=\"single-player\">North: {northNameToPublish}</div>\n                    <div className=\"single-player\">South: {southNameToPublish}</div>\n                    <div className=\"single-player\">East: {eastNameToPublish}</div>\n                    <div className=\"single-player\">West: {westNameToPublish}</div>\n               </div>\n               <div className=\"hand-area\">\n                    {northCardsDisplay}\n                    {southCardsDisplay}\n                    {eastCardsDisplay}\n                    {westCardsDisplay}\n                    { this.state.timestampLastDeal > 0 &&\n                         <div className=\"last-dealt game-footer-info\">Last Dealt: {this.convert(this.state.timestampLastDeal)}</div>\n                    }\n               </div>\n               <div className=\"game-footer-info\">Game ID#: {this.props.gameID}</div>\n               <Beforeunload onBeforeunload={() => \"Leaving this page will cause you to lose all data and not be able to return to your game.\"} />\n               </>\n               );\n     }\n\n}\n\n\nexport default LiveGame;\n","import React from 'react';\nimport EnterGameID from './EnterGameID';\nimport NameFormBasic from './NameFormBasic';\nimport LiveGame from './LiveGame';\nimport base from './base';\nimport { firebaseApp } from './base';\n\n///////////////////////////////////////////////////////////////////////\n\nclass CreateGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               playerName: '',\n               gameID: '',\n               isValidGameID: false,\n               duplicate: false,\n          }\n\n     }\n\n\n\n     doesGameExist = (id) => {\n\n          const gameID = parseInt(id);\n          console.log(parseInt(gameID));\n          let waitingCheck = true;\n\n          let allGamesByID = null;\n            base.fetch('allGames', {\n              context: this,\n              asArray: true\n            }).then(data => {\n\n              console.log(data);\n              // use mapping to get an array of all the GameIDs, then check that the new game is a unique number\n              allGamesByID = data.map(function(game) { return parseInt(game.gameID); });\n              if( allGamesByID.includes(gameID) ) {\n                   this.setState({ isValidGameID: false, duplicate: true });\n                   console.log(\"ALREADY TAKEN\");\n                   waitingCheck = false;\n              } else {\n                   // if new game number is unique, set isValidGameID to true and enter Name\n                   console.log(\"WORKED\");\n                   this.setState({ isValidGameID: true, gameID: gameID, duplicate: false });\n              }\n\n            }).catch(error => {\n              //handle error\n         });\n\n\n\n         // if( waitingCheck === false ) {\n         //\n         //         base.post(`allGames/${gameID}`, {\n         //             data: { gameID: gameID }\n         //           }).then(() => {\n         //             console.log(\"Created New Game via base.post\");\n         //           }).catch(err => {\n         //             // handle error\n         //           });\n         //\n         //      }\n\n     }\n\n\n\n     setPlayerName = (name) => {\n         console.log(name);\n         this.setState({ playerName: name });\n\n\n         base.update(`allGames/${this.state.gameID}`, {\n              data: { northName: name }\n            }).then(() => {\n              console.log(\"Added New Player\");\n            }).catch(err => {\n              // handle error\n            });\n\n     }\n\n\n     setGameID = (gameID) => {\n\n          base.post(`allGames/${gameID}`, {\n              data: { gameID: gameID }\n            }).then(() => {\n              console.log(\"Created New Game via base.post\");\n            }).catch(err => {\n              // handle error\n            });\n\n     }\n\n\n     render() {\n\n          console.log(this.state.duplicate);\n\n          let liveGame = null\n          if( this.state.playerName && this.state.gameID ) {\n               liveGame = ( <LiveGame\n                                   loggedIn={this.state.playerName}\n                                   northName={this.state.playerName}\n                                   gameID={this.state.gameID}\n                              />);\n          }\n\n          let nameForm = null;\n          if( this.state.isValidGameID && !this.state.playerName ) {\n               nameForm = (\n                              <>\n                              <h2>Create a New Game</h2>\n                              <NameFormBasic\n                                   setPlayerName={this.setPlayerName}\n                              />\n                              </>\n                         );\n               this.setGameID(this.state.gameID);\n          } else if ( this.state.isValidGameID && this.state.playerName ) {\n               nameForm = null;\n          }\n\n\n          let warning = null;\n          if( this.state.duplicate === true ) {\n               warning = (<div className=\"warning\">Sorry, that game was already created. Try again?</div>);\n          }\n\n\n          return (\n               <>\n               { this.state.isValidGameID === false &&\n                    <>\n                    <h2>Create a New Game</h2>\n                    {warning}\n                    <EnterGameID\n                         doesGameExist={this.doesGameExist}\n                    />\n                    </>\n               }\n               { nameForm }\n               { liveGame }\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default CreateGame;\n","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass GameFormBasic extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               gameID: ''\n          }\n\n     }\n\n     handleGameChange = (event) => {\n          console.log(event.target.value);\n          this.setState({ gameID: event.target.value });\n       }\n\n     handleGameSubmit = (event) => {\n          event.preventDefault();\n          this.props.handleGameSubmit(this.state.gameID);\n     }\n\n     render() {\n\n          return (\n               <>\n               <form onSubmit={this.handleGameSubmit} id=\"join-a-game-form\">\n                 <label>\n                    <span className=\"form-label-text\">Enter the Game ID#:</span>\n                    <input type=\"number\" value={this.state.gameID} onChange={this.handleGameChange} required />\n                 </label>\n                 <input type=\"submit\" value=\"Submit\" />\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default GameFormBasic;\n","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass SelectPosition extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               position: '',\n               selectedOption: '',\n          }\n\n     }\n\n     handleOptionChange = (event) => {\n          console.log(event.target.value);\n         this.setState({\n           position: event.target.value\n         });\n       }\n\n       handleRadioSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"You have submitted: \" + this.state.position);\n        this.props.setPlayerPosition(this.state.position);\n       };\n\n     render() {\n\n          const availableSeats = this.props.availableSeats;\n\n          const northRadioBtn = (<div className=\"form-check\">\n            <div className=\"disabled\">North: {this.props.northName}</div>\n          </div>);\n\n          let southRadioBtn = null;\n          if( availableSeats.includes('South')) {\n               southRadioBtn = (<div className=\"form-check\">\n                 <label>\n                   <input\n                    type=\"radio\"\n                    name=\"react-tips\"\n                    value=\"South\"\n                    checked={this.state.position === \"South\"}\n                    onChange={this.handleOptionChange}\n                    className=\"form-check-input form-radio\"\n                   />\n                   South\n                 </label>\n               </div>);\n          } else if( this.props.southName ) {\n               southRadioBtn = (<div className=\"form-check\">\n                 <div className=\"disabled\">South: {this.props.southName}</div>\n               </div>);\n          }\n\n          let eastRadioBtn = null;\n          if( availableSeats.includes('East')) {\n               eastRadioBtn = (<div className=\"form-check\">\n                 <label>\n                   <input\n                    type=\"radio\"\n                    name=\"react-tips\"\n                    value=\"East\"\n                    checked={this.state.position === \"East\"}\n                    onChange={this.handleOptionChange}\n                    className=\"form-check-input form-radio\"\n                   />\n                   East\n                 </label>\n               </div>);\n          } else if( this.props.eastName ) {\n               eastRadioBtn = (<div className=\"form-check\">\n                 <div className=\"disabled\">East: {this.props.eastName}</div>\n               </div>);\n          }\n\n          let westRadioBtn = null;\n          if( availableSeats.includes('West')) {\n               westRadioBtn = (<div className=\"form-check\">\n                 <label>\n                   <input\n                    type=\"radio\"\n                    name=\"react-tips\"\n                    value=\"West\"\n                    checked={this.state.position === \"West\"}\n                    onChange={this.handleOptionChange}\n                    className=\"form-check-input form-radio\"\n                   />\n                   West\n                 </label>\n               </div>);\n          } else if( this.props.westName ) {\n               westRadioBtn = (<div className=\"form-check\">\n                 <div className=\"disabled\">West: {this.props.westName}</div>\n               </div>);\n          }\n\n\n          let saveButton = (\n               <button className=\"btn btn-primary mt-2\" type=\"submit\">\n                 Save\n               </button>);\n          console.log(availableSeats);\n          if( availableSeats.length < 1 ) {\n               saveButton = (\n                    <button className=\"btn btn-primary mt-2\" type=\"submit\"><a href=\"/bridge-dealer\">\n                      Sorry, this game is full. Start over?\n                    </a></button>);\n          }\n\n          return (\n               <>\n               <h3>Select a Seat at the Table: {this.state.position}</h3>\n               <form onSubmit={this.handleRadioSubmit} id=\"select-position-form\">\n\n                 {northRadioBtn}\n                 {southRadioBtn}\n                 {eastRadioBtn}\n                 {westRadioBtn}\n\n                 <div className=\"form-group\">\n                   {saveButton}\n                 </div>\n\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default SelectPosition;\n","import React from 'react';\nimport GameFormBasic from './GameFormBasic';\nimport NameFormBasic from './NameFormBasic';\nimport SelectPosition from './SelectPosition';\nimport LiveGame from './LiveGame';\nimport base from './base';\nimport { firebaseApp } from './base';\n\n///////////////////////////////////////////////////////////////////////\n\nclass JoinGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               gameID: '',\n               availableSeats: [],\n               position: '',\n               playerName: '',\n               warning: false,\n               northName: '',\n               southName: '',\n               eastName: '',\n               westName: ''\n          }\n\n     }\n\n\n     handleGameSubmit = (id) => {\n          console.log(id);\n          const gameID = parseInt(id);\n\n          let allGamesByID = null;\n            base.fetch('allGames', {\n              context: this,\n              asArray: true\n            }).then(data => {\n\n              console.log(data);\n              // use mapping to get an array of all the GameIDs, then check that the new game is a unique number\n              allGamesByID = data.map(function(game) { return parseInt(game.gameID); });\n              if( allGamesByID.includes(gameID) ) {\n\n                   console.log(\"GOOD TO GO!\");\n                   this.setState({ gameID, warning: false });\n                   this.availableSeats(gameID);\n\n              } else {\n\n                   console.log(\"THAT GAME DOES NOT EXIST\");\n                   this.setState({ warning: true, gameID: '' });\n              }\n\n            }).catch(error => {\n              //handle error\n         });\n\n     }\n\n\n     setPlayerPosition = (position) => {\n          console.log(position);\n         this.setState({ position: position });\n    }\n\n\n     setPlayerName = (name) => {\n         console.log(name);\n         this.setState({ playerName: name });\n\n         if( this.state.position === 'South' ) {\n              base.update(`allGames/${this.state.gameID}`, {\n                   data: { southName: name }\n                 }).then(() => {\n                   console.log(\"Added New Player\");\n                 }).catch(err => {\n                   // handle error\n                 });\n            }\n\n       if( this.state.position === 'East' ) {\n           base.update(`allGames/${this.state.gameID}`, {\n                data: { eastName: name }\n               }).then(() => {\n                console.log(\"Added New Player\");\n               }).catch(err => {\n                // handle error\n               });\n         }\n\n         if( this.state.position === 'West' ) {\n             base.update(`allGames/${this.state.gameID}`, {\n                  data: { westName: name }\n                 }).then(() => {\n                  console.log(\"Added New Player\");\n                 }).catch(err => {\n                  // handle error\n                 });\n           }\n\n     }\n\n\n\n     availableSeats = (gameID) => {\n\n          let availableSeats = ['South', 'East', 'West'];\n\n          base.fetch(`allGames/${gameID}`, {\n            context: this,\n            asArray: false\n          }).then(data => {\n\n            console.log(data);\n\n            if( data.northName !== undefined ) {\n                 console.log(\"NORTHNAME: \" + data.northName);\n                 this.setState({ northName: data.northName });\n            }\n\n            if( data.southName !== undefined ) {\n               console.log(\"SOUTHNAME: \" + data.southName);\n               availableSeats = availableSeats.filter(item => item !== 'South');\n               console.log(availableSeats);\n               this.setState({ southName: data.southName });\n            }\n\n            if( data.eastName !== undefined ) {\n               console.log(\"EASTNAME: \" + data.eastName);\n               availableSeats = availableSeats.filter(item => item !== 'East');\n               console.log(availableSeats);\n               this.setState({ eastName: data.eastName });\n            }\n\n            if( data.westName !== undefined ) {\n               console.log(\"WESTNAME: \" + data.westName);\n               availableSeats = availableSeats.filter(item => item !== 'West');\n               console.log(availableSeats);\n               this.setState({ westName: data.westName });\n            }\n\n            this.setState({ availableSeats: availableSeats });\n\n          }).catch(error => {\n            //handle error\n       });\n\n     }\n\n\n\n\n\n     render() {\n\n          console.log(this.state.northName);\n\n          let form = null;\n          if( this.state.gameID === '' ) {\n               form = (\n                    <GameFormBasic\n                         handleGameSubmit={this.handleGameSubmit}\n                    />\n               );\n          } else if ( this.state.gameID !== '' && this.state.position === '' && this.state.playerName === ''  ) {\n               form = (\n                    <SelectPosition\n                         gameID={this.state.gameID}\n                         setPlayerPosition={this.setPlayerPosition}\n                         availableSeats={this.state.availableSeats}\n                         northName={this.state.northName}\n                         southName={this.state.southName}\n                         eastName={this.state.eastName}\n                         westName={this.state.westName}\n                    />\n               );\n          } else if ( this.state.gameID !== '' && this.state.position !== '' && this.state.playerName === ''  ) {\n               form = (\n                    <NameFormBasic\n                         setPlayerName={this.setPlayerName}\n                         gameID={this.state.gameID}\n                    />\n               );\n          }\n\n\n          let warning = null;\n          if( this.state.warning === true ) {\n               warning = (<div className=\"warning\">Sorry, that game does not exist. Try again?</div>);\n          }\n\n          let status = [];\n          if( this.state.gameID !== '' ) {\n               status.push(<div className=\"status game-id\" key=\"status-game-id\">Game ID#: {this.state.gameID}</div>);\n          }\n          if( this.state.position !== '' ) {\n               status.push(<div className=\"status position\" key=\"status-position\">Seat: {this.state.position}</div>);\n          }\n\n\n\n          let signInInfo = (\n               <>\n               <h2>Join a Game</h2>\n               {warning}\n               <div className=\"status-area\">{status}</div>\n               {form}\n               </>\n          );\n\n\n          let liveGame = null;\n          if( this.state.playerName && this.state.gameID ) {\n\n               if( this.state.position === 'South' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.state.playerName}\n                                        southName={this.state.playerName}\n                                        gameID={this.state.gameID}\n                                   />);\n               }\n\n               if( this.state.position === 'East' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.state.playerName}\n                                        eastName={this.state.playerName}\n                                        gameID={this.state.gameID}\n                                   />);\n               }\n\n               if( this.state.position === 'West' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.state.playerName}\n                                        westName={this.state.playerName}\n                                        gameID={this.state.gameID}\n                                   />);\n               }\n\n\n               signInInfo = null;\n          }\n\n\n\n\n          return (\n               <>\n               {signInInfo}\n               {liveGame}\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default JoinGame;\n","import React from 'react';\nimport CreateGame from './CreateGame';\nimport JoinGame from './JoinGame';\n\n///////////////////////////////////////////////////////////////////////\n\nclass Landing extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               currentGameID: null,\n               createGame: false,\n               joinGame: false\n          }\n\n     }\n\n     creatingNewGame = (event) => {\n          event.preventDefault();\n          this.setState({\n             createGame: true\n          });\n     }\n\n\n     joiningAGame = (event) => {\n          event.preventDefault();\n          this.setState({\n             joinGame: true\n          });\n     }\n\n\n     render() {\n\n          // decide what to show visitors in the app\n          let appView = (\n               <div className=\"action-button-area\">\n                    <button onClick={this.joiningAGame}>Join Game</button>\n                    <button onClick={this.creatingNewGame}>Create New Game</button>\n               </div>);\n\n          if( this.state.createGame === true ) {\n               appView = (\n                    <CreateGame />\n               );\n          }\n\n          if( this.state.joinGame === true ) {\n               appView = (\n                    <JoinGame />\n               );\n          }\n\n          return(\n               <div className=\"single-page-area\">\n                    {appView}\n               </div>\n          );\n\n     }\n\n}\n\n\nexport default Landing;\n","import React from 'react';\nimport Landing from './Landing';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"><h1><a href=\"/bridge-dealer\">Bridge Dealer</a></h1></header>\n      <div className=\"clb-grail-body\">\n          <Landing />\n      </div>\n      <footer className=\"clb-bridge-dealer-footer\">\n              Bridge Dealer &middot; <a href=\"https://github.com/tomatillodesign/bridge-dealer\" target=\"_blank\">Version 1.0</a> &middot; By Chris Liu-Beers, <a href=\"http://tomatillodesign.com\" target=\"_blank\">Tomatillo Design</a>\n            </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}