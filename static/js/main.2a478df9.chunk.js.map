{"version":3,"sources":["EnterGameID.js","NameFormBasic.js","playingCards.js","base.js","LiveGame.js","CreateGame.js","GameFormBasic.js","SelectPosition.js","JoinGame.js","ReJoinGame.js","Landing.js","App.js","serviceWorker.js","index.js"],"names":["EnterGameID","props","handleGameIDChange","event","console","log","target","value","setState","gameID","handleGameSubmit","preventDefault","doesGameExist","state","onSubmit","this","id","className","type","onChange","required","React","Component","NameFormBasic","handleNameChange","name","handleNameSubmit","setPlayerName","playingCards","suitValue","displayOrder","suit","symbol","abbr","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","shortid","require","LiveGame","shuffle","arr","i","j","temp","length","Math","floor","random","convert","unixtimestamp","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","displayCards","cards","sort","a","b","map","card","index","key","generate","data-index","data-suit","data-value","data-symbol","data-abbr","dealNewHand","timeStamp","now","newDeck","northCards","splice","southCards","eastCards","westCards","timestampLastDeal","thisHand","prevState","allHands","loggedIn","northName","localStorage","setItem","JSON","stringify","southName","eastName","westName","isEmpty","obj","undefined","cleanUp","currentGameID","syncState","context","asArray","fetch","then","data","catch","error","listenTo","northCardsDisplay","southCardsDisplay","eastCardsDisplay","westCardsDisplay","dealNewHandButton","onClick","role","aria-label","northNameToPublish","southNameToPublish","eastNameToPublish","westNameToPublish","Object","entries","onBeforeunload","CreateGame","parseInt","game","includes","isValidGameID","duplicate","playerName","update","err","setGameID","post","liveGame","nameForm","warning","GameFormBasic","handleGameChange","SelectPosition","handleOptionChange","position","handleRadioSubmit","setPlayerPosition","selectedOption","availableSeats","northRadioBtn","southRadioBtn","checked","eastRadioBtn","westRadioBtn","saveButton","href","JoinGame","filter","item","form","status","push","signInInfo","ReJoinGame","Landing","creatingNewGame","createGame","joiningAGame","joinGame","rejoiningAGame","rejoinGame","getItem","playerPosition","appView","App","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2a478df9.chunk.js","sourcesContent":["import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass EnterGameID extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               gameID: ''\n          }\n\n     }\n\n     handleGameIDChange = (event) => {\n          console.log(event.target.value);\n          this.setState({ gameID: event.target.value });\n       }\n\n     handleGameSubmit = (event) => {\n          event.preventDefault();\n          this.props.doesGameExist(this.state.gameID);\n     }\n\n     render() {\n\n          return (\n               <>\n               <form onSubmit={this.handleGameSubmit} id=\"create-new-game-form\">\n                 <label>\n                    <span className=\"form-label-text\">Enter Game ID#:</span>\n                    <input type=\"number\" value={this.state.gameID} onChange={this.handleGameIDChange} required />\n                 </label>\n                 <input type=\"submit\" value=\"Create Game Now\" />\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default EnterGameID;\n","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass NameFormBasic extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               name: ''\n          }\n\n     }\n\n     handleNameChange = (event) => {\n          //console.log(event.target.value);\n          this.setState({ name: event.target.value });\n       }\n\n     handleNameSubmit = (event) => {\n          event.preventDefault();\n          this.props.setPlayerName(this.state.name);\n     }\n\n     render() {\n\n          return (\n               <>\n               <form onSubmit={this.handleNameSubmit} id=\"name-form-basic\">\n                 <label>\n                    <span className=\"name-enter-text\">Enter Your Name:</span>\n                    <input type=\"text\" value={this.state.name} onChange={this.handleNameChange} required />\n                 </label>\n                 <input type=\"submit\" value=\"Submit\" />\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default NameFormBasic;\n","const playingCards = [\n     {\n          name: 'Two of Clubs',\n          value: 2,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Clubs',\n          value: 3,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Clubs',\n          value: 4,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Clubs',\n          value: 5,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Clubs',\n          value: 6,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Clubs',\n          value: 7,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Clubs',\n          value: 8,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Clubs',\n          value: 9,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Clubs',\n          value: 10,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Clubs',\n          value: 11,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Clubs',\n          value: 12,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Clubs',\n          value: 13,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Clubs',\n          value: 14,\n          suitValue: 1,\n          displayOrder: 2,\n          suit: 'Clubs',\n          symbol: '♣️',\n          abbr: 'A',\n     },\n     {\n          name: 'Two of Diamonds',\n          value: 2,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Diamonds',\n          value: 3,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Diamonds',\n          value: 4,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Diamonds',\n          value: 5,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Diamonds',\n          value: 6,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Diamonds',\n          value: 7,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Diamonds',\n          value: 8,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Diamonds',\n          value: 9,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Diamonds',\n          value: 10,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Diamonds',\n          value: 11,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Diamonds',\n          value: 12,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Diamonds',\n          value: 13,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Diamonds',\n          value: 14,\n          suitValue: 2,\n          displayOrder: 1,\n          suit: 'Diamonds',\n          symbol: '♦️',\n          abbr: 'A',\n     },\n     {\n          name: 'Two of Hearts',\n          value: 2,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Hearts',\n          value: 3,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Hearts',\n          value: 4,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Hearts',\n          value: 5,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Hearts',\n          value: 6,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Hearts',\n          value: 7,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Hearts',\n          value: 8,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Hearts',\n          value: 9,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Hearts',\n          value: 10,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Hearts',\n          value: 11,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Hearts',\n          value: 12,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Hearts',\n          value: 13,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Hearts',\n          value: 14,\n          suitValue: 3,\n          displayOrder: 3,\n          suit: 'Hearts',\n          symbol: '♥️',\n          abbr: 'A',\n     },\n     {\n          name: 'Two of Spades',\n          value: 2,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '2',\n     },\n     {\n          name: 'Three of Spades',\n          value: 3,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '3',\n     },\n     {\n          name: 'Four of Spades',\n          value: 4,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '4',\n     },\n     {\n          name: 'Five of Spades',\n          value: 5,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '5',\n     },\n     {\n          name: 'Six of Spades',\n          value: 6,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '6',\n     },\n     {\n          name: 'Seven of Spades',\n          value: 7,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '7',\n     },\n     {\n          name: 'Eight of Spades',\n          value: 8,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '8',\n     },\n     {\n          name: 'Nine of Spades',\n          value: 9,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '9',\n     },\n     {\n          name: 'Ten of Spades',\n          value: 10,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: '10',\n     },\n     {\n          name: 'Jack of Spades',\n          value: 11,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'J',\n     },\n     {\n          name: 'Queen of Spades',\n          value: 12,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'Q',\n     },\n     {\n          name: 'King of Spades',\n          value: 13,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'K',\n     },\n     {\n          name: 'Ace of Spades',\n          value: 14,\n          suitValue: 4,\n          displayOrder: 4,\n          suit: 'Spades',\n          symbol: '♠️',\n          abbr: 'A',\n     },\n];\n\nexport default playingCards;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n     apiKey: \"AIzaSyAmnj0WBhZQsUe-hADDZlUl22Nplioi_Ec\",\n     authDomain: \"bridge-dealer.firebaseapp.com\",\n     databaseURL: \"https://bridge-dealer.firebaseio.com\",\n     projectId: \"bridge-dealer\",\n     storageBucket: \"bridge-dealer.appspot.com\",\n     messagingSenderId: \"759781159430\",\n     appId: \"1:759781159430:web:dafb4c46b5eb0a194d4987\"\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;\n","import React from 'react';\nimport playingCards from './playingCards';\n\nimport base from './base';\nimport { Beforeunload } from 'react-beforeunload';\nconst shortid = require('shortid');\n\n\n///////////////////////////////////////////////////////////////////////\n\nclass LiveGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               northName: this.props.northName,\n               southName: this.props.southName,\n               eastName: this.props.eastName,\n               westName: this.props.westName,\n               loggedIn: this.props.loggedIn,\n               northCards: [],\n               southCards: [],\n               eastCards: [],\n               westCards: [],\n               allHands: [],\n               timestampLastDeal: 0,\n          }\n\n          console.log(playingCards);\n\n     }\n\n     // Helper Function: shuffle the deck to start with, source: https://www.jstips.co/en/javascript/shuffle-an-array/\n     shuffle = (arr) => {\n         var i,\n             j,\n             temp;\n         for (i = arr.length - 1; i > 0; i--) {\n             j = Math.floor(Math.random() * (i + 1));\n             temp = arr[i];\n             arr[i] = arr[j];\n             arr[j] = temp;\n         }\n         return arr;\n     };\n\n\n\n     convert = ( unixtimestamp ) => {\n\n     var date = new Date(unixtimestamp);\n\n      // Months array\n      var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n\n      // Year\n      var year = date.getFullYear();\n\n      // Month\n      var month = months_arr[date.getMonth()];\n\n      // Day\n      var day = date.getDate();\n\n      // Hours\n      var hours = date.getHours();\n\n      // Minutes\n      var minutes = \"0\" + date.getMinutes();\n\n      // Seconds\n      var seconds = \"0\" + date.getSeconds();\n\n      // Display date time in MM-dd-yyyy h:m:s format\n      var convdataTime = month+'-'+day+'-'+year+' '+hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n      return convdataTime;\n\n}\n\n\n     // Helper Function: create the display from an array of objects (cards)\n     displayCards = (cards) => {\n\n          console.log(cards);\n          // order the cards by suit then value (high to low)\n          cards.sort((a, b) => (a.displayOrder < b.displayOrder) ? 1 : (a.suit === b.suit) ? ((a.value < b.value) ? 1 : -1) : -1 );\n\n          const cardsToDisplay = cards.map((card, index) =>\n            <li key={shortid.generate()} className=\"card\" id={card.abbr + '-' + card.suit} data-index={index} data-suit={card.suit} data-value={card.value} data-symbol={card.symbol} data-abbr={card.abbr} >\n              <div className=\"card-abbr\">{card.abbr}</div>\n              <div className=\"card-name\">{card.name}</div>\n              <div className=\"suit-symbol\">{card.symbol}</div>\n            </li>\n          );\n          return cardsToDisplay;\n     }\n\n\n     dealNewHand = () => {\n\n          // add the previous hand into allHands for historical reference\n          // let previousHand = [];\n          // previousHand['northCards'] = this.state.northCards;\n          // previousHand['southCards'] = this.state.southCards;\n          // previousHand['eastCards'] = this.state.eastCards;\n          // previousHand['westCards'] = this.state.westCards;\n          // this.setState(prevState => ({\n          //      allHands: [...prevState.allHands, previousHand],\n          // }));\n\n          const timeStamp = Date.now();\n          const newDeck = [...playingCards];\n          //console.log(newDeck);\n\n          // Deal the cards to each player!\n          //let cardsToDeal = this.shuffle(newDeck);\n          this.shuffle(newDeck);\n\n          let northCards = newDeck.splice(0,13);\n          let southCards = newDeck.splice(0,13);\n          let eastCards = newDeck.splice(0,13);\n          let westCards = newDeck.splice(0,13);\n\n          this.setState({\n               northCards: northCards,\n               southCards: southCards,\n               eastCards: eastCards,\n               westCards: westCards,\n               timestampLastDeal: timeStamp\n          });\n\n          // now store this new hand into the historical log of hands\n          let thisHand = [];\n          thisHand['northCards'] = northCards;\n          thisHand['southCards'] = southCards;\n          thisHand['eastCards'] = eastCards;\n          thisHand['westCards'] = westCards;\n          thisHand['timestampLastDeal'] = timeStamp;\n          this.setState(prevState => ({\n               allHands: [...prevState.allHands, thisHand],\n          }));\n\n\n          // save current hand into localStorage\n          if(this.state.loggedIn === this.state.northName) { localStorage.setItem('bridgeDealer.currentHand', JSON.stringify(northCards)); }\n          if(this.state.loggedIn === this.state.southName) { localStorage.setItem('bridgeDealer.currentHand', JSON.stringify(southCards)); }\n          if(this.state.loggedIn === this.state.eastName) { localStorage.setItem('bridgeDealer.currentHand', JSON.stringify(eastCards)); }\n          if(this.state.loggedIn === this.state.westName) { localStorage.setItem('bridgeDealer.currentHand', JSON.stringify(westCards)); }\n          //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n     }\n\n\n\n     componentDidMount() {\n\n          console.log(\"componentDidMount LiveGame\");\n          const currentGameID = this.props.gameID;\n\n            base.syncState(`allGames/${currentGameID}/northCards`, {\n              context: this,\n              state: 'northCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/southCards`, {\n              context: this,\n              state: 'southCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/eastCards`, {\n              context: this,\n              state: 'eastCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/westCards`, {\n              context: this,\n              state: 'westCards',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/allHands`, {\n              context: this,\n              state: 'allHands',\n              asArray: true\n            });\n\n            base.syncState(`allGames/${currentGameID}/timestampLastDeal`, {\n              context: this,\n              state: 'timestampLastDeal',\n              asArray: false\n            });\n\n            /// Fetch all of the player names ///////////////////////////////\n            base.fetch(`allGames/${currentGameID}`, {\n             context: this,\n             asArray: false\n           }).then(data => {\n\n             //console.log(data);\n\n             this.setState({\n                  northName: data.northName,\n                  southName: data.southName,\n                  eastName: data.eastName,\n                  westName: data.westName\n             });\n\n           }).catch(error => {\n             //handle error\n        });\n\n\n        // listen to the gameID endpoint to see if new players are added - SOUTHNAME\n        base.listenTo(`allGames/${currentGameID}/southName`, {\n         context: this,\n         asArray: false,\n         then(data){\n           //console.log(\"UPDATED southName DATA ///////////////////////////////////////////\");\n           //console.log(data);\n            this.setState({ southName: data });\n         }\n       })\n\n       // listen to the gameID endpoint to see if new players are added - SOUTHNAME\n       base.listenTo(`allGames/${currentGameID}/eastName`, {\n       context: this,\n       asArray: false,\n       then(data){\n          //console.log(\"UPDATED eastName DATA ///////////////////////////////////////////\");\n          //console.log(data);\n          this.setState({ eastName: data });\n       }\n     })\n\n        // listen to the gameID endpoint to see if new players are added - WESTNAME\n        base.listenTo(`allGames/${currentGameID}/westName`, {\n         context: this,\n         asArray: false,\n         then(data){\n           //console.log(\"UPDATED westName DATA ///////////////////////////////////////////\");\n           //console.log(data);\n            this.setState({ westName: data });\n         }\n       })\n\n\n       //////////////////////////////////////////////////////////////////////////////////////////////////////////\n       // Each player records their info into localStorage in case of disconnection\n       localStorage.setItem('bridgeDealer.loggedIn', this.props.loggedIn);\n       localStorage.setItem('bridgeDealer.gameID', this.props.gameID);\n\n       // get player position\n       if(this.state.loggedIn === this.state.northName) { localStorage.setItem('bridgeDealer.position', 'north'); }\n       if(this.state.loggedIn === this.state.southName) { localStorage.setItem('bridgeDealer.position', 'south'); }\n       if(this.state.loggedIn === this.state.eastName) { localStorage.setItem('bridgeDealer.position', 'east'); }\n       if(this.state.loggedIn === this.state.westName) { localStorage.setItem('bridgeDealer.position', 'west'); }\n       //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n     }\n\n\n\n\n     isEmpty = (obj) => {\n          if( obj !== undefined ) {\n               // return Object.keys(obj).length === 0;\n               return JSON.stringify(obj) === '{}';\n          } else {\n               return false;\n          }\n     }\n\n\n\n     cleanUp = (event) => {\n          event.preventDefault();\n          console.log(\"Clean UPPPPPPPPP\");\n     }\n\n\n\n\n     componentWillUnmount() {\n\n          console.log(\"Component Will Unmount ------------------------------\");\n\n     }\n\n\n\n     render() {\n\n          // see which player is logged in and show only their cards\n          let northCardsDisplay = null;\n          let southCardsDisplay = null;\n          let eastCardsDisplay = null;\n          let westCardsDisplay = null;\n\n          let dealNewHandButton = null;\n\n          if( this.props.loggedIn === this.state.northName || this.state.loggedIn === 'clb' ) {\n               northCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>North - {this.state.northName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.northCards)}</div>\n                    </div>\n               );\n\n               if( this.state.northName && this.state.southName && this.state.eastName && this.state.westName ) {\n                    dealNewHandButton = (<div className=\"deal-new-hand-action-area\"><button onClick={this.dealNewHand}>Deal New Hand <span role=\"img\" aria-label=\"thumbs up\">👍</span></button></div>);\n               }\n          }\n\n          if( this.state.loggedIn === this.state.southName || this.state.loggedIn === 'clb' ) {\n               southCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>South - {this.state.southName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.southCards)}</div>\n                    </div>\n               );\n          }\n\n          if( this.state.loggedIn === this.state.eastName || this.state.loggedIn === 'clb' ) {\n               eastCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>East - {this.state.eastName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.eastCards)}</div>\n                    </div>\n               );\n          }\n\n          if( this.state.loggedIn === this.state.westName || this.state.loggedIn === 'clb' ) {\n               westCardsDisplay = (\n                    <div className=\"single-hand\">\n                         <h3>West - {this.state.westName}</h3>\n                         <div className=\"cards-display-area\">{this.displayCards(this.state.westCards)}</div>\n                    </div>\n               );\n          }\n\n          let northNameToPublish = this.state.northName || (<span className=\"waiting-on-player\">Waiting...</span>);\n          let southNameToPublish = this.state.southName || (<span className=\"waiting-on-player\">Waiting...</span>);\n          let eastNameToPublish = this.state.eastName || (<span className=\"waiting-on-player\">Waiting...</span>);\n          let westNameToPublish = this.state.westName || (<span className=\"waiting-on-player\">Waiting...</span>);\n\n          if( this.state.southName === {} ) { southNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>); }\n          if( this.state.eastName === {} ) { eastNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>); }\n          if( this.state.westName === {} ) { westNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>); }\n\n          if( this.state.southName !== undefined && this.state.southName !== null ) {\n               let eastCheck = Object.entries(this.state.southName).length === 0;\n               //console.log(eastCheck);\n               if( eastCheck ) {\n                    southNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>);\n               }\n          }\n\n          if( this.state.eastName !== undefined && this.state.eastName !== null ) {\n               let eastCheck = Object.entries(this.state.eastName).length === 0;\n               //console.log(eastCheck);\n               if( eastCheck ) {\n                    eastNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>);\n               }\n          }\n\n          if( this.state.westName !== undefined && this.state.westName !== null ) {\n               let eastCheck = Object.entries(this.state.westName).length === 0;\n               //console.log(eastCheck);\n               if( eastCheck ) {\n                    westNameToPublish = (<span className=\"waiting-on-player\">Waiting...</span>);\n               }\n          }\n\n\n          return (\n               <>\n               <h2 className=\"lets-play-headline\">Let's Play!</h2>\n               {dealNewHandButton}\n               <div className=\"players-listing-area\">\n                    <div className=\"single-player\">North: {northNameToPublish}</div>\n                    <div className=\"single-player\">South: {southNameToPublish}</div>\n                    <div className=\"single-player\">East: {eastNameToPublish}</div>\n                    <div className=\"single-player\">West: {westNameToPublish}</div>\n               </div>\n               <div className=\"hand-area\">\n                    {northCardsDisplay}\n                    {southCardsDisplay}\n                    {eastCardsDisplay}\n                    {westCardsDisplay}\n                    { this.state.timestampLastDeal > 0 &&\n                         <div className=\"last-dealt game-footer-info\">Last Dealt: {this.convert(this.state.timestampLastDeal)}</div>\n                    }\n               </div>\n               <div className=\"game-footer-info\">Game ID#: {this.props.gameID}</div>\n               <Beforeunload onBeforeunload={this.cleanUp} />\n               </>\n               );\n     }\n\n}\n\n\nexport default LiveGame;\n","import React from 'react';\nimport EnterGameID from './EnterGameID';\nimport NameFormBasic from './NameFormBasic';\nimport LiveGame from './LiveGame';\nimport base from './base';\n\n///////////////////////////////////////////////////////////////////////\n\nclass CreateGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               playerName: '',\n               gameID: '',\n               isValidGameID: false,\n               duplicate: false,\n          }\n\n     }\n\n\n\n     doesGameExist = (id) => {\n\n          const gameID = parseInt(id);\n          console.log(parseInt(gameID));\n\n          let allGamesByID = null;\n            base.fetch('allGames', {\n              context: this,\n              asArray: true\n            }).then(data => {\n\n              console.log(data);\n              // use mapping to get an array of all the GameIDs, then check that the new game is a unique number\n              allGamesByID = data.map(function(game) { return parseInt(game.gameID); });\n              if( allGamesByID.includes(gameID) ) {\n                   this.setState({ isValidGameID: false, duplicate: true });\n                   console.log(\"ALREADY TAKEN\");\n              } else {\n                   // if new game number is unique, set isValidGameID to true and enter Name\n                   console.log(\"WORKED\");\n                   this.setState({ isValidGameID: true, gameID: gameID, duplicate: false });\n              }\n\n            }).catch(error => {\n              //handle error\n         });\n\n     }\n\n\n\n     setPlayerName = (name) => {\n         console.log(name);\n         this.setState({ playerName: name });\n\n\n         base.update(`allGames/${this.state.gameID}`, {\n              data: { northName: name }\n            }).then(() => {\n              console.log(\"Added New Player\");\n            }).catch(err => {\n              // handle error\n            });\n\n     }\n\n\n     setGameID = (gameID) => {\n\n          base.post(`allGames/${gameID}`, {\n              data: { gameID: gameID }\n            }).then(() => {\n              console.log(\"Created New Game via base.post\");\n            }).catch(err => {\n              // handle error\n            });\n\n     }\n\n\n     render() {\n\n          //console.log(this.state.duplicate);\n\n          let liveGame = null\n          if( this.state.playerName && this.state.gameID ) {\n               liveGame = ( <LiveGame\n                                   loggedIn={this.state.playerName}\n                                   northName={this.state.playerName}\n                                   gameID={this.state.gameID}\n                              />);\n          }\n\n          let nameForm = null;\n          if( this.state.isValidGameID && !this.state.playerName ) {\n               nameForm = (\n                              <>\n                              <h2>Create a New Game</h2>\n                              <NameFormBasic\n                                   setPlayerName={this.setPlayerName}\n                              />\n                              </>\n                         );\n               this.setGameID(this.state.gameID);\n          } else if ( this.state.isValidGameID && this.state.playerName ) {\n               nameForm = null;\n          }\n\n\n          let warning = null;\n          if( this.state.duplicate === true ) {\n               warning = (<div className=\"warning\">Sorry, that game was already created. Try again?</div>);\n          }\n\n\n          return (\n               <>\n               { this.state.isValidGameID === false &&\n                    <>\n                    <h2>Create a New Game</h2>\n                    {warning}\n                    <EnterGameID\n                         doesGameExist={this.doesGameExist}\n                    />\n                    </>\n               }\n               { nameForm }\n               { liveGame }\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default CreateGame;\n","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass GameFormBasic extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               gameID: ''\n          }\n\n     }\n\n     handleGameChange = (event) => {\n          console.log(event.target.value);\n          this.setState({ gameID: event.target.value });\n       }\n\n     handleGameSubmit = (event) => {\n          event.preventDefault();\n          this.props.handleGameSubmit(this.state.gameID);\n     }\n\n     render() {\n\n          return (\n               <>\n               <form onSubmit={this.handleGameSubmit} id=\"join-a-game-form\">\n                 <label>\n                    <span className=\"form-label-text\">Enter the Game ID#:</span>\n                    <input type=\"number\" value={this.state.gameID} onChange={this.handleGameChange} required />\n                 </label>\n                 <input type=\"submit\" value=\"Submit\" />\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default GameFormBasic;\n","import React from 'react';\n\n///////////////////////////////////////////////////////////////////////\n\nclass SelectPosition extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               position: '',\n               selectedOption: '',\n          }\n\n     }\n\n     handleOptionChange = (event) => {\n          console.log(event.target.value);\n         this.setState({\n           position: event.target.value\n         });\n       }\n\n       handleRadioSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"You have submitted: \" + this.state.position);\n        this.props.setPlayerPosition(this.state.position);\n       };\n\n     render() {\n\n          const availableSeats = this.props.availableSeats;\n\n          const northRadioBtn = (<div className=\"form-check\">\n            <div className=\"disabled\">North: {this.props.northName}</div>\n          </div>);\n\n          let southRadioBtn = null;\n          if( availableSeats.includes('South')) {\n               southRadioBtn = (<div className=\"form-check\">\n                 <label>\n                   <input\n                    type=\"radio\"\n                    name=\"react-tips\"\n                    value=\"South\"\n                    checked={this.state.position === \"South\"}\n                    onChange={this.handleOptionChange}\n                    className=\"form-check-input form-radio\"\n                   />\n                   South\n                 </label>\n               </div>);\n          } else if( this.props.southName ) {\n               southRadioBtn = (<div className=\"form-check\">\n                 <div className=\"disabled\">South: {this.props.southName}</div>\n               </div>);\n          }\n\n          let eastRadioBtn = null;\n          if( availableSeats.includes('East')) {\n               eastRadioBtn = (<div className=\"form-check\">\n                 <label>\n                   <input\n                    type=\"radio\"\n                    name=\"react-tips\"\n                    value=\"East\"\n                    checked={this.state.position === \"East\"}\n                    onChange={this.handleOptionChange}\n                    className=\"form-check-input form-radio\"\n                   />\n                   East\n                 </label>\n               </div>);\n          } else if( this.props.eastName ) {\n               eastRadioBtn = (<div className=\"form-check\">\n                 <div className=\"disabled\">East: {this.props.eastName}</div>\n               </div>);\n          }\n\n          let westRadioBtn = null;\n          if( availableSeats.includes('West')) {\n               westRadioBtn = (<div className=\"form-check\">\n                 <label>\n                   <input\n                    type=\"radio\"\n                    name=\"react-tips\"\n                    value=\"West\"\n                    checked={this.state.position === \"West\"}\n                    onChange={this.handleOptionChange}\n                    className=\"form-check-input form-radio\"\n                   />\n                   West\n                 </label>\n               </div>);\n          } else if( this.props.westName ) {\n               westRadioBtn = (<div className=\"form-check\">\n                 <div className=\"disabled\">West: {this.props.westName}</div>\n               </div>);\n          }\n\n\n          let saveButton = (\n               <button className=\"btn btn-primary mt-2\" type=\"submit\">\n                 Save\n               </button>);\n          console.log(availableSeats);\n          if( availableSeats.length < 1 ) {\n               saveButton = (\n                    <button className=\"btn btn-primary mt-2\" type=\"submit\"><a href=\"/bridge-dealer\">\n                      Sorry, this game is full. Start over?\n                    </a></button>);\n          }\n\n          return (\n               <>\n               <h3>Select a Seat at the Table: {this.state.position}</h3>\n               <form onSubmit={this.handleRadioSubmit} id=\"select-position-form\">\n\n                 {northRadioBtn}\n                 {southRadioBtn}\n                 {eastRadioBtn}\n                 {westRadioBtn}\n\n                 <div className=\"form-group\">\n                   {saveButton}\n                 </div>\n\n               </form>\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default SelectPosition;\n","import React from 'react';\nimport GameFormBasic from './GameFormBasic';\nimport NameFormBasic from './NameFormBasic';\nimport SelectPosition from './SelectPosition';\nimport LiveGame from './LiveGame';\nimport base from './base';\n\n///////////////////////////////////////////////////////////////////////\n\nclass JoinGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               gameID: '',\n               availableSeats: [],\n               position: '',\n               playerName: '',\n               warning: false,\n               northName: '',\n               southName: '',\n               eastName: '',\n               westName: ''\n          }\n\n     }\n\n\n     handleGameSubmit = (id) => {\n          console.log(id);\n          const gameID = parseInt(id);\n\n          let allGamesByID = null;\n            base.fetch('allGames', {\n              context: this,\n              asArray: true\n            }).then(data => {\n\n              console.log(data);\n              // use mapping to get an array of all the GameIDs, then check that the new game is a unique number\n              allGamesByID = data.map(function(game) { return parseInt(game.gameID); });\n              if( allGamesByID.includes(gameID) ) {\n\n                   console.log(\"GOOD TO GO!\");\n                   this.setState({ gameID, warning: false });\n                   this.availableSeats(gameID);\n\n              } else {\n\n                   console.log(\"THAT GAME DOES NOT EXIST\");\n                   this.setState({ warning: true, gameID: '' });\n              }\n\n            }).catch(error => {\n              //handle error\n         });\n\n     }\n\n\n     setPlayerPosition = (position) => {\n          console.log(position);\n         this.setState({ position: position });\n    }\n\n\n     setPlayerName = (name) => {\n         console.log(name);\n         this.setState({ playerName: name });\n\n         if( this.state.position === 'South' ) {\n              base.update(`allGames/${this.state.gameID}`, {\n                   data: { southName: name }\n                 }).then(() => {\n                   console.log(\"Added New Player\");\n                 }).catch(err => {\n                   // handle error\n                 });\n            }\n\n       if( this.state.position === 'East' ) {\n           base.update(`allGames/${this.state.gameID}`, {\n                data: { eastName: name }\n               }).then(() => {\n                console.log(\"Added New Player\");\n               }).catch(err => {\n                // handle error\n               });\n         }\n\n         if( this.state.position === 'West' ) {\n             base.update(`allGames/${this.state.gameID}`, {\n                  data: { westName: name }\n                 }).then(() => {\n                  console.log(\"Added New Player\");\n                 }).catch(err => {\n                  // handle error\n                 });\n           }\n\n     }\n\n\n\n     availableSeats = (gameID) => {\n\n          let availableSeats = ['South', 'East', 'West'];\n\n          base.fetch(`allGames/${gameID}`, {\n            context: this,\n            asArray: false\n          }).then(data => {\n\n            console.log(data);\n\n            if( data.northName !== undefined ) {\n                 console.log(\"NORTHNAME: \" + data.northName);\n                 this.setState({ northName: data.northName });\n            }\n\n            if( data.southName !== undefined ) {\n               console.log(\"SOUTHNAME: \" + data.southName);\n               availableSeats = availableSeats.filter(item => item !== 'South');\n               console.log(availableSeats);\n               this.setState({ southName: data.southName });\n            }\n\n            if( data.eastName !== undefined ) {\n               console.log(\"EASTNAME: \" + data.eastName);\n               availableSeats = availableSeats.filter(item => item !== 'East');\n               console.log(availableSeats);\n               this.setState({ eastName: data.eastName });\n            }\n\n            if( data.westName !== undefined ) {\n               console.log(\"WESTNAME: \" + data.westName);\n               availableSeats = availableSeats.filter(item => item !== 'West');\n               console.log(availableSeats);\n               this.setState({ westName: data.westName });\n            }\n\n            this.setState({ availableSeats: availableSeats });\n\n          }).catch(error => {\n            //handle error\n       });\n\n     }\n\n\n\n\n\n     render() {\n\n          console.log(this.state.northName);\n\n          let form = null;\n          if( this.state.gameID === '' ) {\n               form = (\n                    <GameFormBasic\n                         handleGameSubmit={this.handleGameSubmit}\n                    />\n               );\n          } else if ( this.state.gameID !== '' && this.state.position === '' && this.state.playerName === ''  ) {\n               form = (\n                    <SelectPosition\n                         gameID={this.state.gameID}\n                         setPlayerPosition={this.setPlayerPosition}\n                         availableSeats={this.state.availableSeats}\n                         northName={this.state.northName}\n                         southName={this.state.southName}\n                         eastName={this.state.eastName}\n                         westName={this.state.westName}\n                    />\n               );\n          } else if ( this.state.gameID !== '' && this.state.position !== '' && this.state.playerName === ''  ) {\n               form = (\n                    <NameFormBasic\n                         setPlayerName={this.setPlayerName}\n                         gameID={this.state.gameID}\n                    />\n               );\n          }\n\n\n          let warning = null;\n          if( this.state.warning === true ) {\n               warning = (<div className=\"warning\">Sorry, that game does not exist. Try again?</div>);\n          }\n\n          let status = [];\n          if( this.state.gameID !== '' ) {\n               status.push(<div className=\"status game-id\" key=\"status-game-id\">Game ID#: {this.state.gameID}</div>);\n          }\n          if( this.state.position !== '' ) {\n               status.push(<div className=\"status position\" key=\"status-position\">Seat: {this.state.position}</div>);\n          }\n\n\n\n          let signInInfo = (\n               <>\n               <h2>Join a Game</h2>\n               {warning}\n               <div className=\"status-area\">{status}</div>\n               {form}\n               </>\n          );\n\n\n          let liveGame = null;\n          if( this.state.playerName && this.state.gameID ) {\n\n               if( this.state.position === 'South' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.state.playerName}\n                                        southName={this.state.playerName}\n                                        gameID={this.state.gameID}\n                                   />);\n               }\n\n               if( this.state.position === 'East' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.state.playerName}\n                                        eastName={this.state.playerName}\n                                        gameID={this.state.gameID}\n                                   />);\n               }\n\n               if( this.state.position === 'West' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.state.playerName}\n                                        westName={this.state.playerName}\n                                        gameID={this.state.gameID}\n                                   />);\n               }\n\n\n               signInInfo = null;\n          }\n\n\n\n\n          return (\n               <>\n               {signInInfo}\n               {liveGame}\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default JoinGame;\n","import React from 'react';\nimport LiveGame from './LiveGame';\n\n///////////////////////////////////////////////////////////////////////\n\nclass ReJoinGame extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n\n          }\n\n     }\n\n\n\n     render() {\n\n          let liveGame = null;\n          console.log(this.props.position);\n\n          if( this.props.playerName && this.props.gameID ) {\n\n               if( this.props.position === 'north' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.props.playerName}\n                                        northName={this.props.playerName}\n                                        gameID={this.props.gameID}\n                                   />);\n               }\n\n               if( this.props.position === 'south' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.props.playerName}\n                                        southName={this.props.playerName}\n                                        gameID={this.props.gameID}\n                                   />);\n               }\n\n               if( this.props.position === 'east' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.props.playerName}\n                                        eastName={this.props.playerName}\n                                        gameID={this.props.gameID}\n                                   />);\n               }\n\n               if( this.props.position === 'west' ) {\n                    liveGame = ( <LiveGame\n                                        loggedIn={this.props.playerName}\n                                        westName={this.props.playerName}\n                                        gameID={this.props.gameID}\n                                   />);\n               }\n\n          }\n\n\n\n\n          return (\n               <>\n               {liveGame}\n               </>\n\n          );\n\n     }\n\n}\n\n\nexport default ReJoinGame;\n","import React from 'react';\nimport CreateGame from './CreateGame';\nimport JoinGame from './JoinGame';\nimport ReJoinGame from './ReJoinGame';\n\n///////////////////////////////////////////////////////////////////////\n\nclass Landing extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               currentGameID: null,\n               createGame: false,\n               joinGame: false,\n               rejoinGame: false,\n          }\n\n     }\n\n     creatingNewGame = (event) => {\n          event.preventDefault();\n          this.setState({\n             createGame: true\n          });\n     }\n\n\n     joiningAGame = (event) => {\n          event.preventDefault();\n          this.setState({\n             joinGame: true\n          });\n     }\n\n\n     rejoiningAGame = (event) => {\n          event.preventDefault();\n          this.setState({\n             rejoinGame: true\n          });\n     }\n\n\n     render() {\n\n          const gameID = localStorage.getItem('bridgeDealer.gameID');\n          const playerName = localStorage.getItem('bridgeDealer.loggedIn');\n          const playerPosition = localStorage.getItem('bridgeDealer.position');\n          console.log(\"CURRENT GAMEID: \" + gameID);\n\n          // decide what to show visitors in the app\n          let appView = (\n               <>\n               {gameID &&\n               <div className=\"action-button-area rejoin-area\">\n                    <button id=\"rejoin-active-game\" onClick={this.rejoiningAGame}>\n                         <span className=\"rejoin-main-text\">Re-Join Current Game</span>\n                         <span className=\"rejoin-details\">ID#: {gameID}</span>\n                         <span className=\"rejoin-details\">Name: {playerName}</span>\n                         <span className=\"rejoin-details\">Position: {playerPosition}</span>\n                    </button>\n               </div>\n               }\n\n               <div className=\"action-button-area\">\n                    <button onClick={this.joiningAGame}>Join Game</button>\n                    <button onClick={this.creatingNewGame}>Create New Game</button>\n               </div>\n               </>);\n\n          if( this.state.createGame === true ) {\n               appView = (\n                    <CreateGame />\n               );\n          }\n\n          if( this.state.joinGame === true ) {\n               appView = (\n                    <JoinGame />\n               );\n          }\n\n          if( this.state.rejoinGame === true ) {\n               appView = (\n                    <ReJoinGame\n                         gameID={gameID}\n                         playerName={playerName}\n                         position={playerPosition}\n                    />\n               );\n          }\n\n          return(\n               <div className=\"single-page-area\">\n                    {appView}\n               </div>\n          );\n\n     }\n\n}\n\n\nexport default Landing;\n","import React from 'react';\nimport Landing from './Landing';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"><h1><a href=\"/bridge-dealer\">Bridge Dealer</a></h1></header>\n      <div className=\"clb-grail-body\">\n          <Landing />\n      </div>\n      <footer className=\"clb-bridge-dealer-footer\">\n              Bridge Dealer &middot; <a href=\"https://github.com/tomatillodesign/bridge-dealer\" target=\"_blank\" rel=\"noopener noreferrer\">Version 1.0</a> &middot; By Chris Liu-Beers, <a href=\"http://tomatillodesign.com\" target=\"_blank\" rel=\"noopener noreferrer\">Tomatillo Design</a>\n            </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}